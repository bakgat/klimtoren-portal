!function(){"use strict";angular.module("notosportal",["notosportal.core","notosportal.layout","notosportal.widgets","notosportal.data","notosportal.auth","notosportal.dashboard","notosportal.info","notosportal.media","notosportal.links","notosportal.health","notosportal.meals","notosportal.spotlight","notosportal.parents"])}(),function(){"use strict";angular.module("notosportal.auth",[])}(),angular.module("notosportal.core",["ngAnimate","ngSanitize","ngResource","ui.bootstrap","ncy-angular-breadcrumb","restangular","angular-google-analytics","blocks.exception","blocks.logger","blocks.router"]),function(){"use strict";angular.module("notosportal.data",[])}(),function(){"use strict";angular.module("notosportal.info",[])}(),function(){"use strict";angular.module("notosportal.dashboard",[])}(),function(){"use strict";angular.module("notosportal.layout",[])}(),function(){"use strict";angular.module("notosportal.links",[])}(),function(){"use strict";angular.module("notosportal.media",["youtube-embed"])}(),function(){"use strict";angular.module("notosportal.meals",[])}(),function(){"use strict";angular.module("notosportal.health",[])}(),function(){"use strict";angular.module("notosportal.parents",[])}(),function(){"use strict";angular.module("notosportal.spotlight",[])}(),function(){"use strict";angular.module("notosportal.widgets",[])}(),function(){"use strict";angular.module("blocks.logger",[])}(),function(){"use strict";angular.module("blocks.exception",["blocks.logger"])}(),function(){"use strict";angular.module("blocks.router",["ui.router"])}(),function(){"use strict";function e(e,t,n,r,a){function o(r){function a(e){return c=e.data,m.setRealm(e.data.realm),e.data}return c&&!r?n.when(c):e.get("/api/user/profile").then(a)["catch"](function(e){t.catcher("Profiel van de huidige gebruiker opvragen, lukt niet.")(e)})}function s(){return u}function i(e){u=e}function l(r,a){function o(e){return c=e.data,m.setRealm(e.data),e.data}return c&&!a?n.when(c):e.get("/api/realm?ofDomain="+r).then(o)["catch"](function(e){t.catcher("Realm van "+r+" opvragen lukt niet.")(e)})}var c=null,u=null,m=(a.events,{current:o,realm:s,setRealm:i,realmOfDomain:l});return m}angular.module("notosportal.auth").factory("ProfileService",e),e.$inject=["$http","exception","$q","common","config"]}(),function(){"use strict";function e(){function e(e){var t,r,a,o,s,i="",l="",c="",u=0;do t=e.charCodeAt(u++),r=e.charCodeAt(u++),l=e.charCodeAt(u++),a=t>>2,o=(3&t)<<4|r>>4,s=(15&r)<<2|l>>6,c=63&l,isNaN(r)?s=c=64:isNaN(l)&&(c=64),i=i+n.charAt(a)+n.charAt(o)+n.charAt(s)+n.charAt(c),t=r=l="",a=o=s=c="";while(u<e.length);return i}function t(e){var t,r,a,o,s,i="",l="",c="",u=0,m=/[^A-Za-z0-9\+\/\=]/g;m.exec(e)&&window.alert("There were invalid base64 characters in the input text.\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\nExpect errors in decoding."),e=e.replace(/[^A-Za-z0-9\+\/\=]/g,"");do a=n.indexOf(e.charAt(u++)),o=n.indexOf(e.charAt(u++)),s=n.indexOf(e.charAt(u++)),c=n.indexOf(e.charAt(u++)),t=a<<2|o>>4,r=(15&o)<<4|s>>2,l=(3&s)<<6|c,i+=String.fromCharCode(t),64!=s&&(i+=String.fromCharCode(r)),64!=c&&(i+=String.fromCharCode(l)),t=r=l="",a=o=s=c="";while(u<e.length);return i}var n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",r={encode:e,decode:t};return r}angular.module("notosportal.core").factory("Base64",e)}(),function(){"use strict";function e(e,t,n,r){function a(){return t.$broadcast.apply(t,arguments)}function o(e){return/^[-]?\d+$/.test(e)}function s(e,t){return e&&-1!==e.toLowerCase().indexOf(t.toLowerCase())}var i={$broadcast:a,$q:e,$timeout:n,isNumber:o,logger:r,textContains:s};return i}angular.module("notosportal.core").factory("common",e),e.$inject=["$q","$rootScope","$timeout","logger"]}(),function(){"use strict";function e(e){e.options.timeOut=4e3,e.options.closeButton=!0,e.options.progressBar=!0,e.options.positionClass="toast-bottom-right"}function t(e){e.locale("nl-be")}function n(e,t,n,r,a,o){function i(){n.config.$urlRouterProvider=e,n.config.$stateProvider=t,n.config.title=s.appTitle}function l(){r.setOptions({prefixStateName:"index",template:"bootstrap3",includeAbstract:!0})}function c(){var e="/api";a.setBaseUrl(e)}function u(){o.setAccount("UA-20593426-1"),o.setPageEvent("$stateChangeSuccess")}i(),l(),c(),u()}function r(e){e.$on("$viewContentLoaded",function(){angular.element("html, body").animate({scrollTop:0},200)})}function a(e){e.$on("$stateChangeError",function(e){e.preventDefault(),$state.go("error.404")})}var o=angular.module("notosportal.core");o.config(e),o.config(t),e.$inject=["toastr"];var s={appErrorPrefix:"[Fout] ",appTitle:"VBS De Klimtoren",version:"1.0.0"};t.$inject=["moment"],o.value("config",s),o.config(n),o.run(r),o.run(a),o.run(["Analytics",function(e){}]),n.$inject=["$urlRouterProvider","$stateProvider","routehelperConfigProvider","$breadcrumbProvider","RestangularProvider","AnalyticsProvider"],r.$inject=["$rootScope"],a.$inject=["$rootScope"]}(),function(){"use strict";angular.module("notosportal.core").constant("toastr",toastr).constant("moment",moment).constant("gapi",gapi)}(),function(){"use strict";function e(e){e.configureStates(t())}function t(){return[{state:"error",config:{"abstract":!0,url:"/error",views:{"main@":{templateUrl:"js/modules/layout/main.html"}},title:"Fout"}},{state:"error.404",config:{url:"/404",views:{"content@error":{templateUrl:"js/modules/core/errors/404.html"}},title:"Pagina in opbouw"}}]}angular.module("notosportal.core").run(e),e.$inject=["routehelper"]}(),function(){"use strict";function e(e,t){function n(){FB.init({appId:"466280350201960",channelUrl:"js/modules/core/fb-channel.html",cookie:!0,xfbml:!0,version:"v2.3"})}e.fbAsyncInit=function(){n(),t.$broadcast("fb.init")},function(e){var t,n="facebook-jssdk",r=e.getElementsByTagName("script")[0];e.getElementById(n)||(t=e.createElement("script"),t.id=n,t.async=!0,t.src="//connect.facebook.net/en_US/sdk.js",r.parentNode.insertBefore(t,r))}(document)}angular.module("notosportal.core").run(e),e.$inject=["$window","common"]}(),function(){"use strict";function e(e,t){var n;return n=t("http"),e.withConfig(function(e){e.setDefaultHttpFields({cache:n}),e.setResponseInterceptor(function(e,t){return("put"===t||"post"===t||"delete"===t)&&n.removeAll(),e}),e.setOnElemRestangularized(function(e,t){return e.clearCache=function(){n.removeAll()},e})})}angular.module("notosportal.data").factory("HTTPCache",e),e.$inject=["Restangular","$cacheFactory"]}(),function(){"use strict";function e(e,t){function n(){r()}function r(){function t(e){s.events=a(e,"start",!0)}e.getList().then(t)}function a(e,n,r){for(var a={},o=e.length,s=0;o>s;s++){var i=t.utc(e[s][n]).format("DD MMMM YYYY");a[i]=a[i]||[],a[i].push(e[s])}return a}function o(e){if(!i[e]){for(var t=Math.floor(Math.random()*l.length+1);e>0&&i[e-1]===l[t];)t=Math.floor(Math.random()*l.length+1);i[e]=l[t]}return console.log(i[e]),i[e]}var s=this,i=[],l=["bg-success","bg-info","bg-danger","bg-warning"];s.events=[],s.randomColor=o,n()}angular.module("notosportal.info").controller("CalendarController",e),e.$inject=["CalendarEvent","moment"]}(),function(){"use strict";function e(e,t,n){function r(){function e(e){return e}return t.realmOfDomain("klimtoren.be").then(e)}function a(){function t(t){e.service("organization/"+t.id+"/calendar").getList().then(function(e){return a.resolve(e)})}var a=n.defer();return r().then(t),a.promise}var o={getList:a};return o}angular.module("notosportal.info").factory("CalendarEvent",e),e.$inject=["HTTPCache","ProfileService","$q"]}(),function(){"use strict";function e(e){function t(){function t(e){n.campaigns=e}e.campaigns().then(t)}var n=this;n.campaigns=[],t()}angular.module("notosportal.info").controller("CampaignsController",e),e.$inject=["MailChimp"]}(),function(){"use strict";function e(e){function t(){n()}function n(){c=new Array;var t=0;c[t]=new Array,c[t][0]=e({year:2014,months:2,days:3}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2014,months:2,days:9}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2014,months:3,days:7}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2014,months:3,days:1}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2014,months:4,days:1}),c[t][1]="s",t++,c[t]=new Array,c[t][0]=e({year:2014,months:4,days:9}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2014,months:5,days:1}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2014,months:6,days:1}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2014,months:7,days:1}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2014,months:9,days:7}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2014,months:0,days:2}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2014,months:0,days:1}),c[t][1]="s",t++,c[t]=new Array,c[t][0]=e({year:2014,months:1,days:2}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2015,months:0,days:4}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2015,months:1,days:6}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2015,months:1,days:2}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2015,months:3,days:6}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2015,months:3,days:9}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2015,months:4,days:1}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2015,months:4,days:3}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2015,months:4,days:4}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2015,months:4,days:7}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2015,months:6,days:1}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2015,months:7,days:1}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2015,months:0,days:2}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2015,months:0,days:8}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2015,months:0,days:1}),c[t][1]="s",t++,c[t]=new Array,c[t][0]=e({year:2015,months:1,days:1}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2016,months:0,days:3}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2016,months:1,days:8}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2016,months:1,days:4}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2016,months:2,days:8}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2016,months:3,days:10}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2016,months:4,days:5}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2016,months:4,days:8}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2016,months:6,days:1}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2016,months:7,days:1}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2016,months:9,days:1}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2016,months:0,days:6}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2016,months:0,days:1}),c[t][1]="s",t++,c[t]=new Array,c[t][0]=e({year:2016,months:0,days:1}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2016,months:0,days:3}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2016,months:1,days:6}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2017,months:0,days:8}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2017,months:1,days:7}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2017,months:2,days:5}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2017,months:3,days:3}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2017,months:3,days:7}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2017,months:3,days:9}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2017,months:4,days:1}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2017,months:4,days:5}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2017,months:4,days:8}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2017,months:6,days:1}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2017,months:7,days:1}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2017,months:9,days:30}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2017,months:0,days:5}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2017,months:1,days:5}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2018,months:0,days:7}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2018,months:1,days:2}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2018,months:1,days:8}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2018,months:3,days:2}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2018,months:3,days:5}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2018,months:4,days:1}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2018,months:4,days:10}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2018,months:4,days:3}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2018,months:5,days:30}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2018,months:8,days:2}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2018,months:9,days:9}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2018,months:0,days:4}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2018,months:1,days:4}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2019,months:0,days:6}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2019,months:2,days:4}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2019,months:2,days:10}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2019,months:3,days:8}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2019,months:3,days:2}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2019,months:4,days:1}),c[t][1]="s",t++,c[t]=new Array,c[t][0]=e({year:2019,months:4,days:30}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2019,months:5,days:2}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2019,months:5,days:9}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2019,months:8,days:1}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2019,months:9,days:8}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2019,months:0,days:3}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2019,months:0,days:9}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2019,months:0,days:1}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2019,months:1,days:3}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2020,months:0,days:5}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2020,months:1,days:4}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2020,months:2,days:1}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2020,months:3,days:6}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2020,months:3,days:9}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2020,months:4,days:1}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2020,months:4,days:3}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2020,months:4,days:1}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2020,months:4,days:4}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2020,months:6,days:1}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2020,months:7,days:1}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2020,months:0,days:2}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2020,months:0,days:8}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2020,months:0,days:1}),c[t][1]="s",t++,c[t]=new Array,c[t][0]=e({year:2020,months:1,days:1}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2021,months:0,days:3}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2021,months:1,days:5}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2021,months:1,days:1}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2021,months:3,days:5}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2021,months:3,days:8}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2021,months:4,days:3}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2021,months:4,days:6}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2021,months:6,days:1}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2021,months:7,days:1}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2021,months:9,days:30}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2021,months:0,days:7}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2021,months:0,days:1}),c[t][1]="s",t++,c[t]=new Array,c[t][0]=e({year:2021,months:1,days:7}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2022,months:0,days:9}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2022,months:1,days:8}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2022,months:2,days:6}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2022,months:3,days:4}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2022,months:3,days:8}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2022,months:4,days:6}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2022,months:4,days:9}),c[t][1]="e",t++,c[t]=new Array,c[t][0]=e({year:2022,months:6,days:1}),c[t][1]="b",t++,c[t]=new Array,c[t][0]=e({year:2022,months:7,days:1}),c[t][1]="e",u=t}function r(t){for(var n=0;u>n;n++)"s"==c[n][1]&&e(t).isSame(c[n][0],"day")?t=e(t).add(1,"d"):"b"==c[n][1]&&e(t).isBetween(c[n][0],c[n+1][0],"day")&&(t=e(c[n+1][0]).add(1,"d"));var r=e(t).day();return 7==r?t=t.add(2,"d"):1==r&&(t=t.add(1,"d")),t}function a(){var e=new Array(70);return e[0]=new Date(2013,8,2),e[1]=new Date(2013,10,4),e[2]=new Date(2014,0,6),e[3]=new Date(2014,1,3),e[4]=new Date(2014,2,10),e[5]=new Date(2014,3,22),e[6]=new Date(2014,5,2),e[7]=new Date(2014,8,1),e[8]=new Date(2014,10,3),e[9]=new Date(2015,0,5),e[10]=new Date(2015,1,2),e[11]=new Date(2015,1,23),e[12]=new Date(2015,3,20),e[13]=new Date(2015,4,18),e[14]=new Date(2015,8,1),e[15]=new Date(2015,10,9),e[16]=new Date(2016,0,4),e[17]=new Date(2016,1,1),e[18]=new Date(2016,1,15),e[19]=new Date(2016,3,11),e[20]=new Date(2016,4,9),e[21]=new Date(2016,8,1),e[22]=new Date(2016,10,7),e[23]=new Date(2017,0,9),e[24]=new Date(2017,1,1),e[25]=new Date(2017,2,6),e[26]=new Date(2017,3,18),e[27]=new Date(2017,4,29),e[28]=new Date(2017,8,1),e[29]=new Date(2017,10,6),e[30]=new Date(2018,0,8),e[31]=new Date(2018,1,1),e[32]=new Date(2018,1,19),e[33]=new Date(2018,3,16),e[34]=new Date(2018,4,14),e[35]=new Date(2018,8,3),e[36]=new Date(2018,10,5),e[37]=new Date(2019,0,7),e[38]=new Date(2019,1,1),e[39]=new Date(2019,2,11),e[40]=new Date(2019,3,23),e[41]=new Date(2019,5,3),e[42]=new Date(2019,8,2),e[43]=new Date(2019,10,4),e[44]=new Date(2020,0,6),e[45]=new Date(2020,1,3),e[47]=new Date(2020,2,2),e[47]=new Date(2020,3,20),e[48]=new Date(2020,4,25),e[49]=new Date(2020,8,1),e[50]=new Date(2020,10,9),e[51]=new Date(2021,0,4),e[52]=new Date(2021,1,1),e[53]=new Date(2021,1,22),e[54]=new Date(2021,3,19),e[55]=new Date(2021,4,17),e[56]=new Date(2021,8,1),e[57]=new Date(2021,10,8),e[58]=new Date(2022,0,3),e[59]=new Date(2022,1,1),e[60]=new Date(2022,2,7),e[61]=new Date(2022,3,19),e[62]=new Date(2022,4,30),e[63]=new Date(2022,8,1),e[64]=new Date(2022,10,7),e[65]=new Date(2023,0,9),e[66]=new Date(2023,1,1),e[67]=new Date(2023,1,27),e[68]=new Date(2023,3,17),e[69]=new Date(2023,4,22),e}function o(t){if(t=e(t),l=a(),t.isAfter(c[c.length-1][0]))return null;var n=e(),o=t.clone(),s=t.clone();o.add(2,"y").add(6,"M"),s.add(3,"y");var u=n.isBefore(s,"d");if(u){i=-1;for(var m=!1,d=0;!m;){var f=l[d++],y=o.isBefore(f,"d")||o.isSame(f,"d"),h=n.isBefore(f,"d")||n.isSame(f,"d");y&&h&&(m=!0,i=d-1)}var g=l[i];return s.isBefore(g,"d")?(s=r(s),null):g}}var s={calculate:o},i=(e().date("y"),null),l=null,c=null,u=null;return t(),s}angular.module("notosportal.info").factory("EntryDate",e),e.$inject=["moment"]}(),function(){"use strict";function e(e){e.configureStates(t())}function t(){return[{state:"info",config:{"abstract":!0,url:"/info",views:{"main@":{templateUrl:"js/modules/layout/main.html"}},title:"Info"}},{state:"info.contact",config:{url:"/contact",views:{"content@info":{templateUrl:"js/modules/info/contact.html"}},title:"Contact"}},{state:"info.about",config:{url:"/about",views:{"content@info":{templateUrl:"js/modules/info/about.html"}},title:"Over onze school"}},{state:"info.care",config:{url:"/care",views:{"content@info":{templateUrl:"js/modules/info/care.html"}},title:"Zorg op onze school"}},{state:"info.team",config:{url:"/team",views:{"content@info":{templateUrl:"js/modules/info/team.html"}},title:"Ons team"}},{state:"info.calendar",config:{url:"/calendar",views:{"content@info":{templateUrl:"js/modules/info/calendar.html",controller:"CalendarController",controllerAs:"vm"}},title:"Kalender"}},{state:"info.campaigns",config:{url:"/campaigns",views:{"content@info":{templateUrl:"js/modules/info/campaigns.html",controller:"CampaignsController",controllerAs:"vm"}},title:"Nieuwsbrieven"}},{state:"info.register",config:{url:"/register",views:{"content@info":{templateUrl:"js/modules/info/register.html",controller:"RegisterController",controllerAs:"vm"}},title:"Inschrijven"}}]}angular.module("notosportal.info").run(e),e.$inject=["routehelper"]}(),function(){"use strict";function e(e,t){function n(){}function r(){var t=e.calculate(o.birthday);t?(o.nextRegisterDate=t,o.canGo=!1):(o.nextRegisterDate=null,o.canGo=!0)}function a(e){o.dateStatus.opened=!0}var o=this;o.birthday=new Date,o.nextRegisterDate=null,o.dateStatus={opened:!1},o.dateOptions={formatYear:"yy",startingDay:1},o.calculate=r,o.openDate=a,t.$watch("vm.birthday",r),n()}angular.module("notosportal.info").controller("RegisterController",e),e.$inject=["EntryDate","$scope"]}(),function(){"use strict";function e(e){function t(){e.getList().then(function(e){n.blogs=e,$(window).resize()})}var n=this;n.blogs=[],t()}angular.module("notosportal.dashboard").controller("BannersetController",e),e.$inject=["Blog"]}(),function(){"use strict";function e(e,t){function n(){r.collections=e.take(4),t.campaigns(3).then(function(e){r.campaigns=e})}var r=this;r.facebookurl="https://www.facebook.com/vbsdeklimtoren",r.collections=[],r.campaigns=[],n()}angular.module("notosportal.dashboard").controller("DashboardController",e),e.$inject=["GPCollections","MailChimp"]}(),function(){"use strict";function e(e){e.configureStates(t())}function t(){return[{state:"index",config:{"abstract":!0,url:"/index",views:{"main@":{templateUrl:"js/modules/layout/main.html"}},title:"start"}},{state:"index.dashboard",config:{url:"/dashboard",views:{"content@index":{templateUrl:"js/modules/dashboard/dashboard.html",controller:"DashboardController",controllerAs:"vm"},"slider@index":{templateUrl:"js/modules/dashboard/slider.html"},"banner-set@index":{templateUrl:"js/modules/dashboard/banner-set.html",controller:"BannersetController",controllerAs:"vm"}},title:"Dashboard"}}]}angular.module("notosportal.dashboard").run(e),e.$inject=["routehelper"]}(),function(){"use strict";function e(e,t){function n(){e.memberCount().then(function(e){r.campaign_members=e.data.stats.member_count})}var r=this;r.campaign_members=0,n()}angular.module("notosportal.layout").controller("ShellController",e),e.$inject=["MailChimp","$state"]}(),function(){"use strict";function e(e,t,n){function r(){function e(e){return e}return t.realmOfDomain("klimtoren.be").then(e)}function a(){function t(t){e.service("organization/"+t.id+"/blogs").getList().then(function(e){return a.resolve(e)})}var a=n.defer();return r().then(t),a.promise}var o={getList:a};return o}angular.module("notosportal.links").factory("Blog",e),e.$inject=["HTTPCache","ProfileService","$q"]}(),function(){"use strict";function e(e){e.configureStates(t())}function t(){return[{state:"links",config:{"abstract":!0,url:"/links",views:{"main@":{templateUrl:"js/modules/layout/main.html"}},title:"Links"}},{state:"links.leaflets",config:{url:"/leaflets",views:{"content@links":{templateUrl:"js/modules/links/leaflets.html"}},title:"Folders"}}]}angular.module("notosportal.links").run(e),e.$inject=["routehelper"]}(),function(){"use strict";function e(){function e(){return r}function t(e){for(var t=[],n=0;e>n&&n<r.length;)t.push(r[n]),n++;return t}var n={get:e,take:t},r=[{name:"2015-2016",href:"https://plus.google.com/b/103406123671942529660/collection/sYLa3",preview:"https://lh3.googleusercontent.com/-G-Qj-TTAW2M/VfbE9gxgSRI/AAAAAAAADZ0/NfJmsesxHIg/w738-h492-no/DSC_0026.JPG"},{name:"2014-2015",href:"https://plus.google.com/b/103406123671942529660/collection/U5aa3",preview:"https://lh3.googleusercontent.com/-WuQRYCenP8w/VelsvrGL-fI/AAAAAAAAAqI/rj6IT0gPJWM/w777-h583-no/DSCN3028.JPG"},{name:"2013-2014",href:"https://plus.google.com/b/103406123671942529660/collection/EoNP2",preview:"https://lh3.googleusercontent.com/-XuNc8zcK6cg/VelygWhfKUI/AAAAAAAAAvQ/8EZzWBFBgdA/w777-h583-no/IMG_2789.JPG"}];return n}angular.module("notosportal.media").factory("GPCollections",e)}(),function(){"use strict";function e(e,t){function n(t){function n(e){var n=[],r=0;return angular.forEach(e.data.campaigns,function(e){e.recipients.segment_opts||(!t||t>r)&&(n.push(e),r++)}),n}return e.get("/api/mailchimp/campaigns").then(n)}function r(){function t(e){var t=[];return angular.forEach(e.data.campaigns,function(e){e.recipients.segment_opts&&(console.log(e.recipients.segment_opts),t.push(e))}),t}return e.get("/api/mailchimp/campaigns").then(t)}function a(){function t(e){return e.data}return e.get("/api/mailchimp/member_count").success(t)}function o(){e.get("/api/mailchimp/lists/"+s+"/categories").then(function(e){console.log(e)})}var s=204325,i={campaigns:n,mailToSegments:r,memberCount:a,interests:o};return i}angular.module("notosportal.media").factory("MailChimp",e),e.$inject=["$http","$q"]}(),function(){"use strict";function e(e){e.configureStates(t())}function t(){return[{state:"media",config:{"abstract":!0,url:"/media",views:{"main@":{templateUrl:"js/modules/layout/main.html"}},title:"in beeld"}},{state:"media.photos",config:{url:"/photos",views:{"content@media":{templateUrl:"js/modules/media/photos.html",controller:"PhotoController",controllerAs:"vm"}},title:"foto's"}},{state:"media.videos",config:{url:"/videos",views:{"content@media":{templateUrl:"js/modules/media/videos.html",controller:"VideoController",controllerAs:"vm"}},title:"video's"}}]}angular.module("notosportal.info").run(e),e.$inject=["routehelper"]}(),function(){"use strict";function e(e){function t(){n.collections=e.get()}var n=this;n.collections=[],t()}angular.module("notosportal.media").controller("PhotoController",e),e.$inject=["GPCollections"]}(),function(){"use strict";function e(e){function t(){function t(e){r.videos=e}e.getList().then(t)}function n(e){return"https://www.youtube.com/embed/"+e.id+"?showinfo=0&amp;wmode=opaque"}var r=this;r.videos=[],r.src=n,t()}angular.module("notosportal.media").controller("VideoController",e),e.$inject=["Video"]}(),function(){"use strict";function e(e){function t(){var t=e.defer();return t.resolve(n),t.promise}var n=[{id:"hXPjArV6_rA",title:"Saved by the bell 2015"},{id:"_k8Zw9rYmB4",title:"Onze zorgvisie"},{id:"OEqAylOlIho",title:"De Klimtoren Wave"},{id:"JaGQQOCFq5s",title:"Ice Bucket Challenge mevr. Rebekka"}],r={getList:t};return r}angular.module("notosportal.media").factory("Video",e),e.$inject=["$q"]}(),function(){"use strict";function e(e){e.configureStates(t())}function t(){return[{state:"meals",config:{"abstract":!0,url:"/meals",views:{"main@":{templateUrl:"js/modules/layout/main.html"}}}},{state:"meals.pricing",config:{url:"/pricing",views:{"content@meals":{templateUrl:"js/modules/meals/pricing.html"}},title:"Prijzen"}},{state:"meals.menu",config:{url:"/menu",views:{"content@meals":{templateUrl:"js/modules/meals/menu.html",controller:"MenuController",controllerAs:"vm"}},title:"Menu"}}]}angular.module("notosportal.meals").run(e),e.$inject=["routehelper"]}(),function(){"use strict";function e(e){function t(){function t(e){n.mealsHtml=e}e.getMenu().then(t)}var n=this;n.mealsHtml="",n.mealsNotFound=!1,t()}angular.module("notosportal.meals").controller("MenuController",e),e.$inject=["Menu"]}(),function(){"use strict";function e(e,t,n){function r(){function e(e){return e}return t.realmOfDomain("klimtoren.be").then(e)}function a(){function t(t){return o?a.resolve(o):void e.get("/api/organization/"+t.id+"/meals").then(function(e){return o=e.data,a.resolve(o)})}var a=n.defer();return r().then(t),a.promise}var o=null,s={getMenu:a};return s}angular.module("notosportal.meals").factory("Menu",e),e.$inject=["$http","ProfileService","$q"]}(),function(){"use strict";function e(e){e.configureStates(t())}function t(){return[{state:"health",config:{"abstract":!0,url:"/health",views:{"main@":{templateUrl:"js/modules/layout/main.html"}}}},{state:"health.fruit",config:{url:"/fruit",views:{"content@health":{templateUrl:"js/modules/health/fruit.html"}},title:"Fruit op school"}},{state:"health.sports",config:{url:"/sports",views:{"content@health":{templateUrl:"js/modules/health/sports.html"}},title:"Sport op school"}},{state:"health.swimming",config:{url:"/swimming",views:{"content@health":{templateUrl:"js/modules/health/swimming.html"}},title:"Zwemmen met school"}}]}angular.module("notosportal.health").run(e),e.$inject=["routehelper"]}(),function(){"use strict";function e(e){e.configureStates(t())}function t(){return[{state:"parents",config:{"abstract":!0,url:"/parents",views:{"main@":{templateUrl:"js/modules/layout/main.html"}}}},{state:"parents.pta",config:{url:"/pta",views:{"content@parents":{templateUrl:"js/modules/parents/pta.html"}},title:"Ouderraad"}},,{state:"parents.schoolboard",config:{url:"/schoolboard",views:{"content@parents":{templateUrl:"js/modules/parents/schoolboard.html"}},title:"Schoolraad"}},{state:"parents.read",config:{url:"/read",views:{"content@parents":{templateUrl:"js/modules/parents/read.html"}},title:"Lees (groot)ouders"}},{state:"parents.volunteers",config:{url:"/volunteers",views:{"content@parents":{templateUrl:"js/modules/parents/volunteers.html"}},title:"Vrijwilligers"}}]}angular.module("notosportal.parents").run(e),e.$inject=["routehelper"]}(),function(){"use strict";function e(e){e.configureStates(t())}function t(){return[{state:"spotlight",config:{"abstract":!0,url:"/spotlight",views:{"main@":{templateUrl:"js/modules/layout/main.html"}}}},{state:"spotlight.pimp",config:{url:"/pimp",views:{"content@spotlight":{templateUrl:"js/modules/spotlight/pimp.html"}},title:"Pimp je school"}},{state:"spotlight.kiva",config:{url:"/kiva",views:{"content@spotlight":{templateUrl:"js/modules/spotlight/kiva.html"}},title:"KiVa"}},{state:"spotlight.diff",config:{url:"/diff",views:{"content@spotlight":{templateUrl:"js/modules/spotlight/diff.html"}},title:"Contractwerk in de kleuterschool"}},{state:"spotlight.lang",config:{url:"/lang",views:{"content@spotlight":{templateUrl:"js/modules/spotlight/lang.html"}},title:"Nieuwe taalmethode"}},{state:"spotlight.media",config:{url:"/media",views:{"content@spotlight":{templateUrl:"js/modules/spotlight/media.html"}},title:"Leerplan media"}}]}angular.module("notosportal.spotlight").run(e),e.$inject=["routehelper"]}(),function(){"use strict";function e(){function e(e,t,n){function r(){var e=n.appearAnimationDelay||1;e>1&&$(t).css("animation-delay",e+"ms"),$(t).addClass("animated").addClass(n.appearAnimation)}angular.element("body").hasClass("no-csstransitions")||$(t).bind("appear",r)}var t={restrict:"A",link:e};return t}angular.module("notosportal.widgets").directive("appearAnimation",e)}(),function(){"use strict";function e(e){function t(t,n,r){n.addClass("fwb-bg fwb-blur"),e(function(){var t=new Image,a='<div class="blur-box"/>';n.find("canvas").length||(r.image?t.src=r.image:"none"!==n.css("background-image")&&(t.src=n.css("background-image").replace("url(","").replace(")",""),n.css("background-image","none")),t.onload=function(){Pixastic.process(t,"blurfast",{amount:r.amount||2})},n.prepend(a).find(".blur-box").prepend(t)),e(function(){var e=n.find("canvas");e.width()==n.width()?e.css({marginLeft:0,marginTop:-((e.height()-n.height())/2)}):e.css({marginTop:0,marginLeft:-((e.width()-n.width())/2)}),$("body").addClass("blur-load")},50)})}var n={restrict:"A",link:t};return n}angular.module("notosportal.widgets").directive("blur",e),e.$inject=["$timeout"]}(),function(){"use strict";function e(){function e(e,t,n){t.find(".gallery-images, .lightbox").fancybox({nextEffect:"fade",prevEffect:"fade",openEffect:"fade",closeEffect:"fade",helpers:{overlay:{locked:!1},title:{type:"over"}},tpl:{closeBtn:'<a title="Sluiten" class="fancybox-item fancybox-close" href="javascript:;">×</a>',next:'<a title="Volgende" class="fancybox-nav fancybox-next" href="javascript:;">\n						<span><svg x="0" y="0" width="9px" height="16px" viewBox="0 0 9 16" enable-background="new 0 0 9 16" xml:space="preserve"><polygon fill-rule="evenodd" clip-rule="evenodd" fill="#fcfcfc" points="1,0.001 0,1.001 7,8 0,14.999 1,15.999 9,8 "/></svg></span>\n					</a>',
prev:'<a title="Vorige" class="fancybox-nav fancybox-prev" href="javascript:;">\n						<span><svg x="0" y="0" width="9px" height="16px" viewBox="0 0 9 16" enable-background="new 0 0 9 16" xml:space="preserve"><polygon fill-rule="evenodd" clip-rule="evenodd" fill="#fcfcfc" points="8,15.999 9,14.999 2,8 9,1.001 8,0.001 0,8 "/></svg></span>\n					</a>'}})}var t={restrict:"A",link:e};return t}angular.module("notosportal.widgets").directive("fancybox",e)}(),function(){"use strict";function e(){function e(e,t){t.addClass("livicon"),t.addLivicon()}var t={restrict:"A",replace:!0,scope:!1,link:e};return t}angular.module("notosportal.widgets").directive("livicon",e)}(),function(){"use strict";function e(e,t){function n(n,r,a){e(function(){function e(){var e=r.offset().top,a=t.pageYOffset;e>a?r.css({backgroundPosition:"50% "+(e-a)/n+"px"}):r.css({backgroundPosition:"50% "+-(e-a)/n+"px"})}r.addClass("fwb-bg fwb-blur");var n=a.speed||3;e(),angular.element(t).bind("scroll",e)})}var r={restrict:"A",link:n};return r}angular.module("notosportal.widgets").directive("paralax",e),e.$inject=["$timeout","$window"]}(),function(){"use strict";function e(e){function t(t,n,r){e(function(){var e=n;if(e.closest(".rs-slider").hasClass("full-width")){var t,r=angular.element("body"),a=(r.width(),0),o=104;angular.element("#top-box").length&&r.hasClass("hidden-top")&&(a=angular.element("#top-box").outerHeight()-32),t=r.width()>=1200?r.height()-(a+o):800,e.revolution({delay:6e3,startwidth:1200,startheight:t,hideThumbs:10,navigationType:"bullet",navigationArrows:"solo",navigationHAlign:"center",navigationVAlign:"top",navigationHOffset:-545,navigationVOffset:30,hideTimerBar:"on"}).parent().parent().removeClass("load")}else e.revolution({delay:6e3,startwidth:1200,startheight:500,hideThumbs:10,navigationType:"none",onHoverStop:"off"}).parent().parent().removeClass("load")})}var n={restrict:"A",link:t};return n}angular.module("notosportal.widgets").directive("rsSlider",e),e.$inject=["$timeout"]}(),function(){"use strict";function e(e,t){function n(n,r,a){t.error(n,a),e.error("Fout: "+n,r)}function r(n,r,a){t.info(n,a),e.info("Info: "+n,r)}function a(n,r,a){t.success(n,a),e.info("Succes: "+n,r)}function o(n,r,a){t.warning(n,a),e.warn("Let op: "+n,r)}function s(n,r,a){t.warning(n,a),e.warn("Verwijderd: "+n,r)}function i(n,r,a){t.success(n,a),e.info("Bewaard: "+n,r)}var l={showToasts:!0,error:n,info:r,success:a,warning:o,removed:s,saved:i,log:e.log};return l}angular.module("blocks.logger").factory("logger",e),e.$inject=["$log","toastr"]}(),function(){"use strict";function e(){this.config={appErrorPrefix:void 0},this.configure=function(e){this.config.appErrorPrefix=e},this.$get=function(){return{config:this.config}}}function t(e){e.decorator("$exceptionHandler",n)}function n(e,t,n){return function(r,a){var o=t.config.appErrorPrefix||"",s={exception:r,cause:a};r.message=o+r.message,e(r,a),n.error(r.message,s)}}angular.module("blocks.exception").provider("exceptionHandler",e).config(t),t.$inject=["$provide"],n.$inject=["$delegate","exceptionHandler","logger"]}(),function(){"use strict";function e(e){function t(t){return function(n){e.error(t,n)}}var n={catcher:t};return n}angular.module("blocks.exception").factory("exception",e),e.$inject=["logger"]}(),function(){"use strict";function e(){this.config={},this.$get=function(){return{config:this.config}}}function t(e,t,n){function r(e){e.forEach(function(e){e.config.title&&(e.config.ncyBreadcrumb={label:e.config.title.toLowerCase()}),c.state(e.state,e.config)})}function a(){return n.get()}function o(e){var t=null;return a().forEach(function(n){n.name===e&&(t=n)}),t}function s(){i(),l.otherwise("/index/dashboard")}function i(){t.$on("$stateChangeSuccess",function(n,r,a){var o=e.config.title+(r.title?" | "+r.title:"");t.title=o,t.$state=r})}var l=e.config.$urlRouterProvider,c=e.config.$stateProvider,u={configureStates:r,states:a,get:o};return s(),u}angular.module("blocks.router").provider("routehelperConfig",e).factory("routehelper",t),t.$inject=["routehelperConfig","$rootScope","$state"]}();
//# sourceMappingURL=data:application/json;base64,