(function () {
    'use strict';

    angular
        .module('notosportal', [
            //shared modules
            'notosportal.core',
            'notosportal.layout',
            'notosportal.widgets',
            'notosportal.data',
            'notosportal.auth',

            //app modules
            'notosportal.dashboard',
            'notosportal.info',
            'notosportal.media',
            'notosportal.links',
            'notosportal.health',
            'notosportal.meals',
            'notosportal.spotlight',
            'notosportal.parents'
        ]);
})();
(function () {
    'use strict';

    angular
        .module('notosportal.auth', []);
})();
(function () {
    'use strict';

    angular
        .module('notosportal.dashboard', []);
})();
angular
    .module('notosportal.core', [
        //Angular
        'ngAnimate', 'ngSanitize', 'ngResource',

        //3rd party
        'ui.bootstrap',
        'ncy-angular-breadcrumb',
        'restangular',
        'angular-google-analytics',

        //cross app modules
        'blocks.exception',
        'blocks.logger',
        'blocks.router'
    ]);
(function () {
    'use strict';

    angular
        .module('notosportal.data', []);
})();
(function () {
    'use strict';

    angular
        .module('notosportal.health', []);
})();
(function () {
    'use strict';

    angular
        .module('notosportal.info', []);
})();
(function () {
    'use strict';

    angular
        .module('notosportal.layout', []);
})();
(function () {
    'use strict';

    angular
        .module('notosportal.links', []);
})();
(function () {
    'use strict';

    angular
        .module('notosportal.meals', []);
})();
(function () {
    'use strict';

    angular
        .module('notosportal.media', ['youtube-embed']);
})();
(function () {
    'use strict';

    angular
        .module('notosportal.parents', []);
})();
(function () {
    'use strict';

    angular
        .module('notosportal.spotlight', []);
})();
(function () {
    'use strict';

    angular
        .module('notosportal.widgets', []);
})();
(function () {
    'use strict';

    angular
        .module('blocks.router', [
            'ui.router'
        ]);
})();
(function () {
    'use strict';

    angular
        .module('blocks.logger', []);
})();
(function () {
    'use strict';

    angular
        .module('blocks.exception', ['blocks.logger']);
})();
/**
 * notosportal.auth
 * FACTORY: Profile
 */

(function () {
    'use strict';

    angular
        .module('notosportal.auth')
        .factory('ProfileService', ProfileService);

    /* @ngInject */
    function ProfileService($http, exception, $q, common, config) {
        var cache = null;
        var _realm = null;
        var events = config.events;

        var service = {
            current: current,
            realm: realm,
            setRealm: setRealm,
            realmOfDomain: realmOfDomain
        };

        return service;
        //////////////

        function current(forceRefresh) {
            if (cache && !forceRefresh) {
                //should return promise
                return $q.when(cache);
            }

            return $http.get('/api/user/profile')
                .then(getCurrentComplete)
                .catch(function (message) {
                    exception.catcher('Profiel van de huidige gebruiker opvragen, lukt niet.')(message);
                });


            function getCurrentComplete(response) {
                cache = response.data;
                service.setRealm(response.data.realm);
                return response.data;
            }

        }

        function realm() {
            return _realm; //synchronous, as async data was here at initialization
        }

        function setRealm(realm) {
            //realm.domain_name= realm.domain_name.replace(/\./g, '_');
            _realm = realm;

        }

        function realmOfDomain(domain, forceRefresh) {
            if (cache && !forceRefresh) {
                return $q.when(cache);
            }
            return $http.get('/api/realm?ofDomain=' + domain)
                .then(getOfDomainComplete)
                .catch(function (message) {
                    exception.catcher('Realm van ' + domain + ' opvragen lukt niet.')(message);
                });

            function getOfDomainComplete(response) {
                cache = response.data;
                service.setRealm(response.data);
                return response.data;
            }
        }
    }
    ProfileService.$inject = ["$http", "exception", "$q", "common", "config"];
})
();
/**
 * notosportal.dashboard
 * CONTROLLER: BannersetController
 */
(function () {
    'use strict';

    angular
        .module('notosportal.dashboard')
        .controller('BannersetController', BannersetController);

    /* @ngInject */
    function BannersetController(Blog) {
        /*jshint validthis: true */
        var vm = this;

        vm.blogs = [];

        activate();
        ///////////

        function activate() {

            Blog.getList().then(function (data) {
                vm.blogs = data;
                $(window).resize(); //trigger resize to call bannerSet Initialization
            });
        }
    }
    BannersetController.$inject = ["Blog"];
})();
/**
 * notosportal.dashboard
 * CONTROLLER: DashboardController
 */
(function () {
    'use strict';

    angular
        .module('notosportal.dashboard')
        .controller('DashboardController', DashboardController);

    /* @ngInject */
    function DashboardController(GPCollections, MailChimp) {
        /*jshint validthis: true */
        var vm = this;
        vm.facebookurl = 'https://www.facebook.com/vbsdeklimtoren';
        vm.collections = [];
        vm.campaigns = [];

        activate();
        ///////////

        function activate() {
            vm.collections = GPCollections.take(4);

            MailChimp.campaigns(3).then(function(response) {
                vm.campaigns = response;
            });


        }
    }
    DashboardController.$inject = ["GPCollections", "MailChimp"];
})();
/**
 * ROUTES: notosportal.dashboard
 */
(function () {
    'use strict';

    angular
        .module('notosportal.dashboard')
        .run(configRoutes);

    /* @ngInject */
    function configRoutes(routehelper) {
        routehelper.configureStates(getStates());
    }
    configRoutes.$inject = ["routehelper"];;

    function getStates() {
        return [
            {
                state: 'index',
                config: {
                    abstract: true,
                    url: '/index',
                    views: {
                        'main@': {
                            templateUrl: 'js/modules/layout/main.html'
                        }
                    },
                    title: 'start'
                }
            },
            {
                state: 'index.dashboard',
                config: {
                    url: '/dashboard',
                    views: {
                        'content@index': {
                            templateUrl: 'js/modules/dashboard/dashboard.html',
                            controller: 'DashboardController',
                            controllerAs: 'vm'
                        },
                        'slider@index': {
                            templateUrl: 'js/modules/dashboard/slider.html'
                        },
                        'banner-set@index': {
                            templateUrl: 'js/modules/dashboard/banner-set.html',
                            controller: 'BannersetController',
                            controllerAs: 'vm'
                        }
                    },
                    title: 'Dashboard'
                }
            }
        ];
    };
})();
/**
 * notosportal.core
 * FACTORY: Base64
 */

(function () {
    'use strict';

    angular
        .module('notosportal.core')
        .factory('Base64', Base64);

    /* @ngInject */
    function Base64() {
        var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
        var service = {
            encode: encode,
            decode: decode
        }

        return service;
        ////////////////

        function encode(input) {
            var output = "";
            var chr1, chr2, chr3 = "";
            var enc1, enc2, enc3, enc4 = "";
            var i = 0;

            do {
                chr1 = input.charCodeAt(i++);
                chr2 = input.charCodeAt(i++);
                chr3 = input.charCodeAt(i++);

                enc1 = chr1 >> 2;
                enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
                enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
                enc4 = chr3 & 63;

                if (isNaN(chr2)) {
                    enc3 = enc4 = 64;
                } else if (isNaN(chr3)) {
                    enc4 = 64;
                }

                output = output +
                    keyStr.charAt(enc1) +
                    keyStr.charAt(enc2) +
                    keyStr.charAt(enc3) +
                    keyStr.charAt(enc4);
                chr1 = chr2 = chr3 = "";
                enc1 = enc2 = enc3 = enc4 = "";
            } while (i < input.length);

            return output;
        }

        function decode(input) {
            var output = "";
            var chr1, chr2, chr3 = "";
            var enc1, enc2, enc3, enc4 = "";
            var i = 0;

            // remove all characters that are not A-Z, a-z, 0-9, +, /, or =
            var base64test = /[^A-Za-z0-9\+\/\=]/g;
            if (base64test.exec(input)) {
                window.alert("There were invalid base64 characters in the input text.\n" +
                    "Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\n" +
                    "Expect errors in decoding.");
            }
            input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");

            do {
                enc1 = keyStr.indexOf(input.charAt(i++));
                enc2 = keyStr.indexOf(input.charAt(i++));
                enc3 = keyStr.indexOf(input.charAt(i++));
                enc4 = keyStr.indexOf(input.charAt(i++));

                chr1 = (enc1 << 2) | (enc2 >> 4);
                chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
                chr3 = ((enc3 & 3) << 6) | enc4;

                output = output + String.fromCharCode(chr1);

                if (enc3 != 64) {
                    output = output + String.fromCharCode(chr2);
                }
                if (enc4 != 64) {
                    output = output + String.fromCharCode(chr3);
                }

                chr1 = chr2 = chr3 = "";
                enc1 = enc2 = enc3 = enc4 = "";

            } while (i < input.length);

            return output;
        }
    };
})();
/**
 * notosportal.core
 * FACTORY: common
 */

(function () {
    'use strict';

    angular
        .module('notosportal.core')
        .factory('common', common);

    function common($q, $rootScope, $timeout, logger) {

        var service = {
            // common angular dependencies
            $broadcast: $broadcast,
            $q: $q,
            $timeout: $timeout,
            // generic
            isNumber: isNumber,
            logger: logger,
            textContains: textContains
        }

        return service;
        ////////////////////////


        function $broadcast() {
            return $rootScope.$broadcast.apply($rootScope, arguments);
        }


        function isNumber(val) {
            // negative or positive
            return (/^[-]?\d+$/).test(val);
        }

        function textContains(text, searchText) {
            return text && -1 !== text.toLowerCase().indexOf(searchText.toLowerCase());
        }
    }
    common.$inject = ["$q", "$rootScope", "$timeout", "logger"];
})();
(function () {
    'use strict';

    var core = angular.module('notosportal.core');

    core.config(toastrConfig);
    core.config(momentConfig);

    /* @ngInject */
    function toastrConfig(toastr) {
        toastr.options.timeOut = 4000;
        toastr.options.closeButton = true;
        toastr.options.progressBar = true;
        toastr.options.positionClass = 'toast-bottom-right';
    }
    toastrConfig.$inject = ["toastr"];

    var config = {
        appErrorPrefix: '[Fout] ',
        appTitle: 'VBS De Klimtoren',
        version: '1.0.0'
    };

    /* @ngInject */
    function momentConfig(moment) {
        moment.locale('nl-be');
    }
    momentConfig.$inject = ["moment"];

    core.value('config', config);

    core.config(configure);

    core.run(afterViewContentLoaded);

    core.run(set404);

    core.run(["Analytics", function(Analytics) {}]); //Inject once for automatic page-tracking

    /* @ngInject */
    function configure($urlRouterProvider, $stateProvider,
                       routehelperConfigProvider, $breadcrumbProvider,
                       RestangularProvider, AnalyticsProvider) {

        configureRouting();
        configureBreadcrumb();

        configureRestangular();
        configureGoogleAnalytics();

        function configureRouting() {
            routehelperConfigProvider.config.$urlRouterProvider = $urlRouterProvider;
            routehelperConfigProvider.config.$stateProvider = $stateProvider;

            routehelperConfigProvider.config.title = config.appTitle;
        }

        function configureBreadcrumb() {
            $breadcrumbProvider.setOptions({
                prefixStateName: 'index',
                template: 'bootstrap3',
                includeAbstract: true
            });
        }

        function configureRestangular() {
            var baseUrl = '/api';

            RestangularProvider.setBaseUrl(baseUrl);
        }

        function configureGoogleAnalytics() {
            // Set a single account
            AnalyticsProvider.setAccount('UA-20593426-1');
            AnalyticsProvider.setPageEvent('$stateChangeSuccess');
        }
    }
    configure.$inject = ["$urlRouterProvider", "$stateProvider", "routehelperConfigProvider", "$breadcrumbProvider", "RestangularProvider", "AnalyticsProvider"];

    /* @ngInject */
    function afterViewContentLoaded($rootScope) {
        $rootScope.$on('$viewContentLoaded',function(){
            angular.element('html, body').animate({ scrollTop: 0 }, 200);
        })
    }
    afterViewContentLoaded.$inject = ["$rootScope"];

    /* @ngInject */
    function set404($rootScope) {
        $rootScope.$on('$stateChangeError', function(event) {
            event.preventDefault();
            $state.go('error.404');
        });
    }
    set404.$inject = ["$rootScope"];

})();
/* global toastr:false, moment:false */
(function() {
    'use strict';

    angular
        .module('notosportal.core')
        .constant('toastr', toastr)
        .constant('moment', moment)
        .constant('gapi', gapi);
})();
/**
 * ROUTES: notosportal.core
 */
(function () {
    'use strict';

    angular
        .module('notosportal.core')
        .run(configRoutes);

    /* @ngInject */
    function configRoutes(routehelper) {
        routehelper.configureStates(getStates());
    }
    configRoutes.$inject = ["routehelper"];;

    function getStates() {
        return [
            {
                state: 'error',
                config: {
                    abstract: true,
                    url: '/error',
                    views: {
                        'main@': {
                            templateUrl: 'js/modules/layout/main.html'
                        }
                    },
                    title: 'Fout'
                }
            },
            {
                state: 'error.404',
                config: {
                    url: '/404',
                    views: {
                        'content@error': {
                            templateUrl: 'js/modules/core/errors/404.html'
                        },
                    },
                    title: 'Pagina in opbouw'
                }
            }
        ];
    };
})();
(function () {
    'use strict';

    angular.module('notosportal.core')
        .run(facebookInit);

    /* @ngInject */
    function facebookInit($window, common) {
        //when facebook is initialized
        //we can render Google+ too
        $window.fbAsyncInit = function () {
            initFacebook();
            common.$broadcast('fb.init');
        };

        function initFacebook() {
            FB.init({
                appId: '466280350201960',
                channelUrl: 'js/modules/core/fb-channel.html',
                cookie: true,
                xfbml: true,
                version: 'v2.3'
            });
        }

        (function (d) {
            // load the Facebook javascript SDK

            var js,
                id = 'facebook-jssdk',
                ref = d.getElementsByTagName('script')[0];

            if (d.getElementById(id)) {
                return;
            }

            js = d.createElement('script');
            js.id = id;
            js.async = true;
            js.src = "//connect.facebook.net/en_US/sdk.js";

            ref.parentNode.insertBefore(js, ref);

        }(document));
    }
    facebookInit.$inject = ["$window", "common"];
})();
/**
 * notosportal.data
 * FACTORY: HTTPCache
 */

(function () {
    'use strict';

    angular
        .module('notosportal.data')
        .factory('HTTPCache', HTTPCache);

    /* @ngInject */
    function HTTPCache(Restangular, $cacheFactory) {
        var cache;
        cache = $cacheFactory('http');

        return Restangular.withConfig(function (RestangularConfigurer) {
            RestangularConfigurer.setDefaultHttpFields({cache: cache});
            RestangularConfigurer.setResponseInterceptor(function (response, operation) {
                if (operation === 'put' || operation === 'post' || operation === 'delete') {
                    cache.removeAll();
                }
                return response;
            });

            // Custom Global Method(s) for Restangularized Elements.
            RestangularConfigurer.setOnElemRestangularized(function(elem, isCollection) {
                elem.clearCache = function() {
                    cache.removeAll();
                }
                return elem;
            });
        });
    }
    HTTPCache.$inject = ["Restangular", "$cacheFactory"];
})();
/**
 * ROUTES: notosportal.health
 */
(function () {
    'use strict';

    angular
        .module('notosportal.health')
        .run(configRoutes);

    /* @ngInject */
    function configRoutes(routehelper) {
        routehelper.configureStates(getStates());
    }
    configRoutes.$inject = ["routehelper"];;

    function getStates() {
        return [
            {
                state: 'health',
                config: {
                    abstract: true,
                    url: '/health',
                    views: {
                        'main@': {
                            templateUrl: 'js/modules/layout/main.html'
                        }
                    },
                }
            },
            {
                state: 'health.fruit',
                config: {
                    url: '/fruit',
                    views: {
                        'content@health': {
                            templateUrl: 'js/modules/health/fruit.html'
                        }
                    },
                    title: 'Fruit op school'
                }
            },
            {
                state: 'health.sports',
                config: {
                    url: '/sports',
                    views: {
                        'content@health': {
                            templateUrl: 'js/modules/health/sports.html'
                        }
                    },
                    title: 'Sport op school'
                }
            },
            {
                state: 'health.swimming',
                config: {
                    url: '/swimming',
                    views: {
                        'content@health': {
                            templateUrl: 'js/modules/health/swimming.html'
                        }
                    },
                    title: 'Zwemmen met school'
                }
            }
        ];
    };
})();
/**
 * notosportal.info
 * CONTROLLER: CalendarController
 */
(function () {
    'use strict';

    angular
        .module('notosportal.info')
        .controller('CalendarController', CalendarController);

    /* @ngInject */
    function CalendarController(CalendarEvent, moment) {
        /*jshint validthis: true */
        var vm = this;

        var indexes = [],
            colors = ['bg-success', 'bg-info', 'bg-danger', 'bg-warning'];

        vm.events = [];
        vm.randomColor = randomColor;


        activate();
        ///////////////

        function activate() {
            getCalendarEvents();
        }

        function getCalendarEvents() {
            return CalendarEvent.getList().then(calendarEventsComplete);

            function calendarEventsComplete(data) {
                //angular.copy($scope.data, $scope.testData);
                vm.events = convertTo(data, 'start', true);
                return vm.events;
            }
        };

        function convertTo(arr, key, dayWise) {
            var groups = {};
            var l = arr.length;
            for (var i = 0; i < l; i++) {
                var local = moment.utc(arr[i][key]).format('DD MMMM YYYY');
                //if (dayWise) {

                //console.log(local);
                //arr[i][key] = arr[i][key].toLocaleDateString();
                //}
                // else {
                //     arr[i][key] = arr[i][key].toTimeString();
                //}
                groups[local] = groups[local] || [];
                groups[local].push(arr[i]);
            }
            return groups;
        };

        function randomColor(index) {
            if (!indexes[index]) {
                var rnd = Math.floor(Math.random() * colors.length + 1);
                //not same as previous
                while(index > 0 && indexes[index-1] === colors[rnd]) {
                    rnd = Math.floor(Math.random() * colors.length + 1);
                }
                indexes[index] = colors[rnd];
            }
            console.log(indexes[index]);
            return indexes[index];
        }
    }
    CalendarController.$inject = ["CalendarEvent", "moment"];
})();
/**
 * notosportal.info
 * FACTORY: CalendarEvent
 */

(function () {
    'use strict';

    angular
        .module('notosportal.info')
        .factory('CalendarEvent', CalendarEvent);

    /* @ngInject */
    function CalendarEvent(HTTPCache, ProfileService, $q) {
        var service = {
            getList: getList
        }

        return service;
        ////////////////

        function getRealm() {
            return ProfileService.realmOfDomain('klimtoren.be')
                .then(getProfileComplete);

            function getProfileComplete(response) {
                return response;
            }
        }

        function getList() {
            var deferred = $q.defer();

            getRealm().then(getRealmComplete);

            function getRealmComplete(response) {
                HTTPCache.service('organization/' + response.id + '/calendar').getList()
                    .then(function(data) {
                        return deferred.resolve(data);
                    });
            }

            return deferred.promise;
        }

    }
    CalendarEvent.$inject = ["HTTPCache", "ProfileService", "$q"];
})();
/**
 * notosportal.info
 * CONTROLLER: CampaignsController
 */
(function () {
    'use strict';

    angular
        .module('notosportal.info')
        .controller('CampaignsController', CampaignsController);

    /* @ngInject */
    function CampaignsController(MailChimp) {
        /*jshint validthis: true */
        var vm = this;
        vm.campaigns = [];

        activate();
        ////////////

        function activate() {
            MailChimp.campaigns().then(campaignsSuccess);

            function campaignsSuccess(response) {
                vm.campaigns = response;
            }
        }


    }
    CampaignsController.$inject = ["MailChimp"];
})();
/**
 * notosportal.info
 * FACTORY: EntryDate
 */

(function () {
    'use strict';

    angular
        .module('notosportal.info')
        .factory('EntryDate', EntryDate);

    /* @ngInject */
    function EntryDate(moment) {
        var service = {
                calculate: calculate
            },
            labels = {
                "BirthdayIs": "De geboortedatum van je kind is ",
                "WillAttend": "Je kind zal gaan naar ",
                "Regular": "een gewone kleuterschool",
                "RegularTitle": "Gewone kleuterschool:<br>",
                "Exceptional": "een buitengewone kleuterschool",
                "ExceptionalTitle": "Buitengewone kleuterschool:<br>",
                "BirthdayRepeat": "Je kind dat geboren is op ",
                "CanCommence": " mag starten in een kleuterklas op ",
                "CanCommenceEarliest": " mag starten in de kleuterklas op ",//" mag ten vroegste starten in een kleuterklas op ",
                "CanCommenceEarliestLaterDate": ". Wil je op een latere datum starten? Dat mag ook. Verwittig de school op welke dag je kind precies wil starten.",
                "Reminder": "Niet vergeten! Schrijf je kind op voorhand in. Wacht daar niet te lang mee. Ga best al een eerste keer informatie vragen op school als je kind nog maar 1 jaar oud is. Meer info: <a href='http://www.onderwijs.vlaanderen.be/inschrijven-in-een-school/' target='_blank'>Inschrijven in een school</a>",
                "ReminderFormer": "Opgelet! Wacht zeker niet tot ",
                "ReminderLatter": " om je kind in te schrijven in een school. <b>Schrijf op voorhand in.</b> Vraag al een eerste keer informatie aan de school als je kind negen of tien maanden oud is. Meer info: <a href='http://www.onderwijs.vlaanderen.be/inschrijven-in-een-school/' target='_blank'>Inschrijven in een school</a>",
                //LaterDate is here twice because we need two different IDs linked to the <a> tag, otherwise the second <a> tag never triggers the execution of the NextDate function
                "LaterDate": "Je wilt je kind laten starten op een latere datum? Klik <a id='triggerNext' href='javascript:void(0)' onclick='parent.triggerHidden()'>hier</a> voor de volgende instapdatum.",
                "LaterDate2": "Je wilt je kind laten starten op een latere datum? Klik <a id='triggerNext2' href='javascript:void(0)' onclick='parent.triggerHidden()'>hier</a> voor de volgende instapdatum.",
                "NextDateIs": "De eerstvolgende datum waarop je kind mag starten is ",
                "AnyDate": " mag op elke schooldag starten in een kleuterklas. <b>Je mag de datum zelf kiezen</b>. Verwittig de school op welke dag je kind precies zal starten. <br>Is je kind al bijna 6? Je kind is leerplichtig vanaf 1 september van het kalenderjaar waarin het 6 jaar geworden is of wordt.<br>Niet vergeten! Schrijf je kind op voorhand in. Wacht daar niet te lang mee. Vraag na op school hoe je kan inschrijven. Meer info: <a href='http://www.onderwijs.vlaanderen.be/inschrijven-in-een-school/' target='_blank'>Inschrijven in een school</a>",
                "AnyDate3former": " mag op elke schooldag starten in een kleuterklas. <b>Je mag de datum zelf kiezen, te beginnen vanaf ",
                "AnyDate3latter": "</b>. Verwittig de school op welke dag je kind precies zal starten.",// <br>Niet vergeten! Schrijf je kind op voorhand in. Wacht daar niet te lang mee. Vraag na op school hoe je kan inschrijven. Meer info: <a href='http://www.onderwijs.vlaanderen.be/inschrijven-in-een-school/' target='_blank'>Inschrijven in een school</a>",
                "ErrorCheckDate": "Foutmelding. <br><ul><li>Check of de geboortedatum juist is.</li><li>Of is je kind ouder dan zes? Deze tool berekent de instapdatum enkel voor kinderen jonger dan zes jaar.</li></ul>",
                //"ExceptionalResult" : " mag op elke schooldag starten in een kleuterklas. <b>Je mag de datum zelf kiezen</b>. Verwittig de school op welke dag je kind precies zal starten. <br> Niet vergeten! Schrijf je kind op voorhand in. Wacht daarmee niet te lang. Vraag na op school hoe je kan inschrijven. (Meer info: <a href='http://www.inschrijvingsrecht.be' target='_blank'>www.inschrijvingsrecht.be</a>)",
                "ExceptionalResult": " mag op elke schooldag starten in een kleuterklas. <b>Je mag de datum zelf kiezen</b>. Verwittig de school op welke dag je kind precies zal starten. <br> Niet vergeten! Schrijf je kind op voorhand in. Wacht daar niet te lang mee. Vraag na op school hoe je kan inschrijven. Meer info: <a href='http://www.onderwijs.vlaanderen.be/inschrijven-in-een-school/' target='_blank'>Inschrijven in een school</a>",
                "Calculate": "Bereken instapdatum",
                //"DateFormat" : "(dag/maand/jaar)",
                "Day": "dag",
                "Month": "maand",
                "Year": "jaar",
                "januari": "januari",
                "februari": "februari",
                "march": "maart",
                "april": "april",
                "may": "mei",
                "june": "juni",
                "july": "juli",
                "august": "augustus",
                "september": "september",
                "october": "oktober",
                "november": "november",
                "december": "december"
            },
            thisYear = moment().date('y'),
            idx = null,
            dates = null,
            holidays = null,
            holidaysMax = null;

        activate();

        return service;
        /////////////////


        function activate() {
            setHolidays();
        }


        function setHolidays() {
            // holidays are either b, e or s
            // b indicates a Beginning of a longer holiday eg. the easter holiday
            // e indicates the last day (or End) of a longer holiday
            // to avoid checking twice, weekends and easter monday (eg) are included in the longer holidays
            // s indicates a holiday of a Single day such as the first of may
            // keep in mind that the dojo library uses a zero based system for months, ie. januari is month 0, december is 11
            holidays = new Array();
            var i = 0;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2014, months: 2, days: 3});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2014, months: 2, days: 9});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2014, months: 3, days: 7});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2014, months: 3, days: 1});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2014, months: 4, days: 1});
            holidays[i][1] = "s";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2014, months: 4, days: 9});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2014, months: 5, days: 1});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2014, months: 6, days: 1});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2014, months: 7, days: 1});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2014, months: 9, days: 7});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2014, months: 0, days: 2});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2014, months: 0, days: 1});
            holidays[i][1] = "s";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2014, months: 1, days: 2});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2015, months: 0, days: 4});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2015, months: 1, days: 6});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2015, months: 1, days: 2});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2015, months: 3, days: 6});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2015, months: 3, days: 9});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2015, months: 4, days: 1});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2015, months: 4, days: 3});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2015, months: 4, days: 4});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2015, months: 4, days: 7});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2015, months: 6, days: 1});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2015, months: 7, days: 1});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2015, months: 0, days: 2});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2015, months: 0, days: 8});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2015, months: 0, days: 1});
            holidays[i][1] = "s";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2015, months: 1, days: 1});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2016, months: 0, days: 3});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2016, months: 1, days: 8});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2016, months: 1, days: 4});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2016, months: 2, days: 8});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2016, months: 3, days: 10});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2016, months: 4, days: 5});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2016, months: 4, days: 8});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2016, months: 6, days: 1});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2016, months: 7, days: 1});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2016, months: 9, days: 1});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2016, months: 0, days: 6});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2016, months: 0, days: 1});
            holidays[i][1] = "s";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2016, months: 0, days: 1});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2016, months: 0, days: 3});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2016, months: 1, days: 6});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2017, months: 0, days: 8});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2017, months: 1, days: 7});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2017, months: 2, days: 5});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2017, months: 3, days: 3});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2017, months: 3, days: 7});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2017, months: 3, days: 9});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2017, months: 4, days: 1});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2017, months: 4, days: 5});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2017, months: 4, days: 8});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2017, months: 6, days: 1});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2017, months: 7, days: 1});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2017, months: 9, days: 30});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2017, months: 0, days: 5});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2017, months: 1, days: 5});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2018, months: 0, days: 7});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2018, months: 1, days: 2});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2018, months: 1, days: 8});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2018, months: 3, days: 2});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2018, months: 3, days: 5});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2018, months: 4, days: 1});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2018, months: 4, days: 10});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2018, months: 4, days: 3});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2018, months: 5, days: 30});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2018, months: 8, days: 2});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2018, months: 9, days: 9});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2018, months: 0, days: 4});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2018, months: 1, days: 4});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2019, months: 0, days: 6});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2019, months: 2, days: 4});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2019, months: 2, days: 10});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2019, months: 3, days: 8});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2019, months: 3, days: 2});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2019, months: 4, days: 1});
            holidays[i][1] = "s";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2019, months: 4, days: 30});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2019, months: 5, days: 2});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2019, months: 5, days: 9});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2019, months: 8, days: 1});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2019, months: 9, days: 8});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2019, months: 0, days: 3});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2019, months: 0, days: 9});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2019, months: 0, days: 1});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2019, months: 1, days: 3});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2020, months: 0, days: 5});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2020, months: 1, days: 4});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2020, months: 2, days: 1});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2020, months: 3, days: 6});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2020, months: 3, days: 9});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2020, months: 4, days: 1});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2020, months: 4, days: 3});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2020, months: 4, days: 1});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2020, months: 4, days: 4});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2020, months: 6, days: 1});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2020, months: 7, days: 1});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2020, months: 0, days: 2});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2020, months: 0, days: 8});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2020, months: 0, days: 1});
            holidays[i][1] = "s";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2020, months: 1, days: 1});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2021, months: 0, days: 3});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2021, months: 1, days: 5});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2021, months: 1, days: 1});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2021, months: 3, days: 5});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2021, months: 3, days: 8});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2021, months: 4, days: 3});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2021, months: 4, days: 6});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2021, months: 6, days: 1});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2021, months: 7, days: 1});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2021, months: 9, days: 30});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2021, months: 0, days: 7});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2021, months: 0, days: 1});
            holidays[i][1] = "s";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2021, months: 1, days: 7});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2022, months: 0, days: 9});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2022, months: 1, days: 8});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2022, months: 2, days: 6});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2022, months: 3, days: 4});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2022, months: 3, days: 8});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2022, months: 4, days: 6});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2022, months: 4, days: 9});
            holidays[i][1] = "e";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2022, months: 6, days: 1});
            holidays[i][1] = "b";
            i++;
            holidays[i] = new Array();
            holidays[i][0] = moment({year: 2022, months: 7, days: 1});
            holidays[i][1] = "e";
            holidaysMax = i;
        }

        function schooldateCheck(inDate) {
            for (var i = 0; i < holidaysMax; i++) {

                if (holidays[i][1] == "s" && moment(inDate).isSame(holidays[i][0], 'day')) {// if inDate is a 'single' holiday, move the date one further
                    inDate = moment(inDate).add(1, 'd');
                }
                else if (holidays[i][1] == "b" && moment(inDate).isBetween(holidays[i][0], holidays[i + 1][0], 'day')) {// if inDate falls inside a longer holiday, move the date to the last day of the holiday, plus one
                    inDate = moment(holidays[i + 1][0]).add(1, 'd');
                }
            }
            var weekday = moment(inDate).day();
            if (weekday == 7) {// it's a saturday ... move to next sunday
                inDate = inDate.add(2, 'd');
            }
            else if (weekday == 1) {// it's a sunday ... move to next monday
                inDate = inDate.add(1, 'd');
            }
            return inDate;
        };

        function setupDates() {
            //array of known enrolement dates
            var dates = new Array(70);
            dates[0] = new Date(2013, 8, 2);
            dates[1] = new Date(2013, 10, 4);
            dates[2] = new Date(2014, 0, 6);
            dates[3] = new Date(2014, 1, 3);
            dates[4] = new Date(2014, 2, 10);
            dates[5] = new Date(2014, 3, 22);
            dates[6] = new Date(2014, 5, 2);

            dates[7] = new Date(2014, 8, 1);
            dates[8] = new Date(2014, 10, 3);
            dates[9] = new Date(2015, 0, 5);
            dates[10] = new Date(2015, 1, 2);
            dates[11] = new Date(2015, 1, 23), dates[12] = new Date(2015, 3, 20);
            dates[13] = new Date(2015, 4, 18);

            dates[14] = new Date(2015, 8, 1);
            dates[15] = new Date(2015, 10, 9);
            dates[16] = new Date(2016, 0, 4);
            dates[17] = new Date(2016, 1, 1);
            dates[18] = new Date(2016, 1, 15);
            dates[19] = new Date(2016, 3, 11);
            dates[20] = new Date(2016, 4, 9);

            dates[21] = new Date(2016, 8, 1);
            dates[22] = new Date(2016, 10, 7);
            dates[23] = new Date(2017, 0, 9);
            dates[24] = new Date(2017, 1, 1);
            dates[25] = new Date(2017, 2, 6);
            dates[26] = new Date(2017, 3, 18);
            dates[27] = new Date(2017, 4, 29);

            dates[28] = new Date(2017, 8, 1);
            dates[29] = new Date(2017, 10, 6);
            dates[30] = new Date(2018, 0, 8);
            dates[31] = new Date(2018, 1, 1);
            dates[32] = new Date(2018, 1, 19);
            dates[33] = new Date(2018, 3, 16);
            dates[34] = new Date(2018, 4, 14);

            dates[35] = new Date(2018, 8, 3);
            dates[36] = new Date(2018, 10, 5);
            dates[37] = new Date(2019, 0, 7);
            dates[38] = new Date(2019, 1, 1);
            dates[39] = new Date(2019, 2, 11);
            dates[40] = new Date(2019, 3, 23);
            dates[41] = new Date(2019, 5, 3);

            dates[42] = new Date(2019, 8, 2);
            dates[43] = new Date(2019, 10, 4);
            dates[44] = new Date(2020, 0, 6);
            dates[45] = new Date(2020, 1, 3);
            dates[47] = new Date(2020, 2, 2);
            dates[47] = new Date(2020, 3, 20);
            dates[48] = new Date(2020, 4, 25);

            dates[49] = new Date(2020, 8, 1);
            dates[50] = new Date(2020, 10, 9);
            dates[51] = new Date(2021, 0, 4);
            dates[52] = new Date(2021, 1, 1);
            dates[53] = new Date(2021, 1, 22);
            dates[54] = new Date(2021, 3, 19);
            dates[55] = new Date(2021, 4, 17);

            dates[56] = new Date(2021, 8, 1);
            dates[57] = new Date(2021, 10, 8);
            dates[58] = new Date(2022, 0, 3);
            dates[59] = new Date(2022, 1, 1);
            dates[60] = new Date(2022, 2, 7);
            dates[61] = new Date(2022, 3, 19);
            dates[62] = new Date(2022, 4, 30);

            dates[63] = new Date(2022, 8, 1);
            dates[64] = new Date(2022, 10, 7);
            dates[65] = new Date(2023, 0, 9);
            dates[66] = new Date(2023, 1, 1);
            dates[67] = new Date(2023, 1, 27);
            dates[68] = new Date(2023, 3, 17);
            dates[69] = new Date(2023, 4, 22);

            return dates;
        };

        function calculate(birthdate) {

            birthdate = moment(birthdate);

            dates = setupDates();

            if(birthdate.isAfter(holidays[holidays.length-1][0])) {
                return null;
            }

            var today = moment();
            var date2 = birthdate.clone();
            var date3 = birthdate.clone();

            date2.add(2, 'y').add(6, 'M');
            date3.add(3, 'y');

            var lessThan3 = today.isBefore(date3, 'd');


            if (lessThan3) {
                idx = -1;
                var found = false,
                    i = 0;
                while (!found) {
                    var tempDate = dates[i++],
                        c = date2.isBefore(tempDate, 'd') || date2.isSame(tempDate, 'd'),
                        ctoday = today.isBefore(tempDate, 'd') || today.isSame(tempDate, 'd');

                    if (c && ctoday) {
                        found = true;
                        idx = i - 1;
                    }
                }
                var schoolDate = dates[idx];


                if (date3.isBefore(schoolDate, 'd')) {
                    date3 = schooldateCheck(date3);
                    return null;
                } else {
                    return schoolDate;
                }
            }
        }
    }
    EntryDate.$inject = ["moment"];
})();

/**
 * ROUTES: notosportal.info
 */
(function () {
    'use strict';

    angular
        .module('notosportal.info')
        .run(configRoutes);

    /* @ngInject */
    function configRoutes(routehelper) {
        routehelper.configureStates(getStates());
    }
    configRoutes.$inject = ["routehelper"];;

    function getStates() {
        return [
            {
                state: 'info',
                config: {
                    abstract: true,
                    url: '/info',
                    views: {
                        'main@': {
                            templateUrl: 'js/modules/layout/main.html'
                        }
                    },
                    title: 'Info'
                }
            },
            {
                state: 'info.contact',
                config: {
                    url: '/contact',
                    views: {
                        'content@info': {
                            templateUrl: 'js/modules/info/contact.html'
                        }
                    },
                    title: 'Contact'
                }
            },
            {
                state: 'info.about',
                config: {
                    url: '/about',
                    views: {
                        'content@info': {
                            templateUrl: 'js/modules/info/about.html'
                        }
                    },
                    title: 'Over onze school'
                }
            },
            {
                state: 'info.care',
                config: {
                    url: '/care',
                    views: {
                        'content@info': {
                            templateUrl: 'js/modules/info/care.html'
                        }
                    },
                    title: 'Zorg op onze school'
                }
            },
            {
                state: 'info.team',
                config: {
                    url: '/team',
                    views: {
                        'content@info': {
                            templateUrl: 'js/modules/info/team.html'
                        }
                    },
                    title: 'Ons team'
                }
            },
            {
                state: 'info.calendar',
                config: {
                    url: '/calendar',
                    views: {
                        'content@info': {
                            templateUrl: 'js/modules/info/calendar.html',
                            controller: 'CalendarController',
                            controllerAs: 'vm'
                        }
                    },
                    title: 'Kalender'
                }
            },
            {
                state: 'info.campaigns',
                config: {
                    url: '/campaigns',
                    views: {
                        'content@info': {
                            templateUrl: 'js/modules/info/campaigns.html',
                            controller: 'CampaignsController',
                            controllerAs: 'vm'
                        }
                    },
                    title: 'Nieuwsbrieven'
                }
            },
            {
                state: 'info.register',
                config: {
                    url: '/register',
                    views: {
                        'content@info': {
                            templateUrl: 'js/modules/info/register.html',
                            controller: 'RegisterController',
                            controllerAs: 'vm'
                        }
                    },
                    title: 'Inschrijven'
                }
            }
            ,
            {
                state: 'info.management',
                config: {
                    url: '/management',
                    views: {
                        'content@info': {
                            templateUrl: 'js/modules/info/management.html'
                        }
                    },
                    title: 'Raad van bestuur'
                }
            },
            {
                state: 'info.schoolboard',
                config: {
                    url: '/schoolboard',
                    views: {
                        'content@info': {
                            templateUrl: 'js/modules/info/schoolboard.html'
                        }
                    },
                    title: 'Schoolraad'
                }
            },
            {
                state: 'info.privacy',
                config: {
                    url: '/privacy',
                    views: {
                        'content@info': {
                            templateUrl: 'js/modules/info/privacy.html'
                        }
                    },
                    title: 'Privacybeleid'
                }
            }
        ];
    };
})();
/**
 * notosportal.info
 * CONTROLLER: RegisterController
 */
(function () {
    'use strict';

    angular
        .module('notosportal.info')
        .controller('RegisterController', RegisterController);

    /* @ngInject */
    function RegisterController(EntryDate, $scope) {
        /*jshint validthis: true */
        var vm = this;

        vm.birthday = new Date();
        vm.nextRegisterDate = null;
        vm.dateStatus = {
            opened: false
        };
        vm.dateOptions = {
            formatYear: 'yy',
            startingDay: 1
        }

        vm.calculate = calculate;
        vm.openDate = openDate;

        $scope.$watch('vm.birthday', calculate);

        activate();
        /////////////

        function activate() {

        }

        function calculate() {

            var d = EntryDate.calculate(vm.birthday);
            if (d) {
                vm.nextRegisterDate = d;
                vm.canGo = false;
            } else {
                vm.nextRegisterDate = null;
                vm.canGo = true;
            }
        }

        function openDate($event) {
            vm.dateStatus.opened = true;
        }
    }
    RegisterController.$inject = ["EntryDate", "$scope"];
})();
/**
 * notosportal.layout
 * CONTROLLER: ShellController
 */
(function () {
    'use strict';

    angular
        .module('notosportal.layout')
        .controller('ShellController', ShellController);

    /* @ngInject */
    function ShellController(MailChimp, $state) {
        /*jshint validthis: true */
        var vm = this;

        vm.campaign_members = 0;
       // vm.hideBreadcrumb = $state.c;

        activate();
        /////////////


        function activate() {
            MailChimp.memberCount().then(function(response) {
                vm.campaign_members = response.data.stats.member_count;
            });
        }


    }
    ShellController.$inject = ["MailChimp", "$state"];


})();
/**
 * notosportal.links
 * FACTORY: Blog
 */

(function () {
    'use strict';

    angular
        .module('notosportal.links')
        .factory('Blog', Blog);

    /* @ngInject */
    function Blog(HTTPCache, ProfileService, $q) {
        var service = {
            getList: getList
        }

        return service;
        ///////////////

        function getRealm() {
            return ProfileService.realmOfDomain('klimtoren.be')
                .then(getProfileComplete);

            function getProfileComplete(response) {
                return response;
            }
        }

        function getList() {
            var deferred = $q.defer();

            getRealm().then(getRealmComplete);

            function getRealmComplete(response) {
                HTTPCache.service('organization/' + response.id + '/blogs').getList()
                    .then(function(data) {
                        return deferred.resolve(data);
                    });
            }

            return deferred.promise;
        }

    }
    Blog.$inject = ["HTTPCache", "ProfileService", "$q"];
})();
/**
 * notosportal.links
 * FACTORY: Leaflet
 */

(function () {
    'use strict';

    angular
        .module('notosportal.links')
        .factory('Leaflet', Leaflet);

    /* @ngInject */
    function Leaflet($q) {
        var leaflets = [
            {
                url: '/content/documents/leaflets/balletschool-gistel-16-17.pdf',
                thumb: '/content/img/leaflets/balletschool-gistel-16-17.png',
                name: 'Gistelse balletschool',
                description: 'brochure 2016-2017',
                keywords: ['sport', 'dans']
            },
            {
                url: '/content/documents/leaflets/DP-2016-2017.jpg',
                thumb: '/content/img/leaflets/DP-16-17.png',
                name: 'Dansplatoo',
                description: '(Fedes) brochure 2016-2017',
                keywords: ['sport', 'dans']
            },
            {
                url: 'http://www.danskant.be/index.html',
                thumb: '/content/img/leaflets/rigajigjig-16-17.jpg',
                name: 'Danskant vzw',
                description: 'aanbod 2016-2017',
                keywords: ['sport', 'dans']
            },
            {
                url: '/content/documents/leaflets/Folder-G-sport.pdf',
                thumb: '/content/img/leaflets/Folder-G-sport.png',
                name: 'Waterski',
                description: 'voor G-sporters',
                keywords: ['sport']
            }
        ]
        var service = {
            getList: getList
        }

        return service;
        ///////////////////

        function getList() {
            var deferred = $q.defer();

            deferred.resolve(leaflets);

            return deferred.promise;
        }
    }
    Leaflet.$inject = ["$q"];
})();
/**
 * notosportal.links
 * CONTROLLER: LeafletsController
 */
(function () {
    'use strict';

    angular
        .module('notosportal.links')
        .controller('LeafletsController', LeafletsController);

    /* @ngInject */
    function LeafletsController(Leaflet) {
        /*jshint validthis: true */
        var vm = this;
        vm.leaflets = [];

        activate();
        /////////////

        function activate() {
            getLeaflets();
        }

        function getLeaflets() {
            return Leaflet.getList().then(leafletsComplete);

            function leafletsComplete(data) {
                console.log(data);
                vm.leaflets = data;
                return vm.leaflets;
            }
        }
    }
    LeafletsController.$inject = ["Leaflet"];
})();
/**
 * ROUTES: notosportal.links
 */
(function () {
    'use strict';

    angular
        .module('notosportal.links')
        .run(configRoutes);

    /* @ngInject */
    function configRoutes(routehelper) {
        routehelper.configureStates(getStates());
    }
    configRoutes.$inject = ["routehelper"];;

    function getStates() {
        return [
            {
                state: 'links',
                config: {
                    abstract: true,
                    url: '/links',
                    views: {
                        'main@': {
                            templateUrl: 'js/modules/layout/main.html'
                        }
                    },
                    title: 'Links'
                }
            },
            {
                state: 'links.leaflets',
                config: {
                    url: '/leaflets',
                    views: {
                        'content@links': {
                            templateUrl: 'js/modules/links/leaflets.html',
                            controller: 'LeafletsController',
                            controllerAs: 'vm'
                        }
                    },
                    title: 'Folders'
                }
            }
        ];
    };
})();
/**
 * ROUTES: notosportal.meals
 */
(function () {
    'use strict';

    angular
        .module('notosportal.meals')
        .run(configRoutes);

    /* @ngInject */
    function configRoutes(routehelper) {
        routehelper.configureStates(getStates());
    }
    configRoutes.$inject = ["routehelper"];;

    function getStates() {
        return [
            {
                state: 'meals',
                config: {
                    abstract: true,
                    url: '/meals',
                    views: {
                        'main@': {
                            templateUrl: 'js/modules/layout/main.html'
                        }
                    },
                }
            },
            {
                state: 'meals.pricing',
                config: {
                    url: '/pricing',
                    views: {
                        'content@meals': {
                            templateUrl: 'js/modules/meals/pricing.html'
                        }
                    },
                    title: 'Prijzen'
                }
            },
            {
                state: 'meals.menu',
                config: {
                    url: '/menu',
                    views: {
                        'content@meals': {
                            templateUrl: 'js/modules/meals/menu.html',
                            controller: 'MenuController',
                            controllerAs: 'vm'
                        }
                    },
                    title: 'Menu'
                }
            }
        ];
    };
})();
/**
 * notosportal.meals
 * CONTROLLER: MenuController
 */
(function () {
    'use strict';

    angular
        .module('notosportal.meals')
        .controller('MenuController', MenuController);

    /* @ngInject */
    function MenuController(Menu) {
        /*jshint validthis: true */
        var vm = this;
        vm.mealsHtml = '';
        vm.mealsNotFound = false;

        activate();
        ///////////


        function activate() {
            Menu.getMenu().then(menuComplete);

            function menuComplete(data) {
                vm.mealsHtml = data;
            }
        }
    }
    MenuController.$inject = ["Menu"];
})();
/**
 * notosportal.meals
 * FACTORY: Menu
 */

(function () {
    'use strict';

    angular
        .module('notosportal.meals')
        .factory('Menu', Menu);

    /* @ngInject */
    function Menu($http, ProfileService, $q) {
        var cache = null;

        var service = {
            getMenu: getMenu
        }

        return service;
        ////////////////

        function getRealm() {
            return ProfileService.realmOfDomain('klimtoren.be')
                .then(getProfileComplete);

            function getProfileComplete(response) {
                return response;
            }
        }

        function getMenu() {
            var deferred = $q.defer();

            getRealm().then(getRealmComplete);

            function getRealmComplete(response) {
                if (cache) {
                    return deferred.resolve(cache);
                } else {
                    $http.get('/api/organization/' + response.id + '/meals')
                        .then(function (response) {
                            cache = response.data;
                            return deferred.resolve(cache);
                        });
                }
            }

            return deferred.promise;
        }
    }
    Menu.$inject = ["$http", "ProfileService", "$q"];
})();
/**
 * notosportal.media
 * FACTORY: GPCollections
 */

(function () {
    'use strict';

    angular
        .module('notosportal.media')
        .factory('GPCollections', GPCollections);

    /* @ngInject */
    function GPCollections() {

        var service = {
            get: get,
            take: take
        }

        /*var collections = [
         'https://plus.google.com/+VBSDEKlimtorenJabbeke/posts/2NVZiPwQwuk',
         'https://plus.google.com/+VBSDEKlimtorenJabbeke/posts/RYCLijRV6oY',
         'https://plus.google.com/+VBSDEKlimtorenJabbeke/posts/9K1nUDTfQRL'
         ];*/
        var collections = [
            {
                name: '2016-2017',
                href: 'https://plus.google.com/b/103406123671942529660/collection/Q0r0cB',
                preview: 'https://lh3.googleusercontent.com/5m7A2R5qxY2oq--q7I_WbHoxHH11ALCiEMHUU9eYganq29R5tgaYYewj7RVrNFfOyTF235Ew_Ac=w777-h583-rw-no'
            },
            {
                name: '2015-2016',
                href: 'https://plus.google.com/b/103406123671942529660/collection/sYLa3',
                preview: 'https://lh3.googleusercontent.com/-G-Qj-TTAW2M/VfbE9gxgSRI/AAAAAAAADZ0/NfJmsesxHIg/w738-h492-no/DSC_0026.JPG'
            },
            {
                name: '2014-2015',
                href: 'https://plus.google.com/b/103406123671942529660/collection/U5aa3',
                preview: 'https://lh3.googleusercontent.com/-WuQRYCenP8w/VelsvrGL-fI/AAAAAAAAAqI/rj6IT0gPJWM/w777-h583-no/DSCN3028.JPG'
            },
            {
                name: '2013-2014',
                href: 'https://plus.google.com/b/103406123671942529660/collection/EoNP2',
                preview: 'https://lh3.googleusercontent.com/-XuNc8zcK6cg/VelygWhfKUI/AAAAAAAAAvQ/8EZzWBFBgdA/w777-h583-no/IMG_2789.JPG'
            }
        ]

        return service;
        ////////////////

        function get() {
            return collections;
        }

        function take(number) {
            var result = [];
            var i = 0;
            while (i < number && i < collections.length) {
                result.push(collections[i]);
                i++;
            }
            return result;
        }
    }
})();
/**
 * notosportal.media
 * FACTORY: MailChimp
 */

(function () {
    'use strict';

    angular
        .module('notosportal.media')
        .factory('MailChimp', MailChimp);

    /* @ngInject */
    function MailChimp($http, $q) {

        var categories_cache = null;
        var interest_cache = null;

        var newsletter_id = 204325;

        var service = {
            campaigns: campaigns,
            mailToSegments: mailToSegments,
            memberCount: memberCount,
            interests: interests
        }

        return service;
        ///////////////

        function campaigns(take) {
            return $http.get('/api/mailchimp/campaigns'/*, {params: {take: take}} TAKE ALL NOW AS IT MUST BE FILTERED*/)
                .then(campaignsSuccess);

            function campaignsSuccess(response) {
                var result = [];
                var i = 0;
                angular.forEach(response.data.campaigns, function (campaign) {
                    if (!campaign.recipients.segment_opts && campaign.settings.subject_line.toLowerCase().indexOf('nieuwsbrief') > -1) {
                        if (!take || i < take) {
                            result.push(campaign);
                            i++;
                        }
                    }
                });
                return result;
            }
        }


        function mailToSegments() {
            return $http.get('/api/mailchimp/campaigns'/*, {params: {take: take}} TAKE ALL NOW AS IT MUST BE FILTERED*/)
                .then(campaignsSuccess);

            function campaignsSuccess(response) {
                var result = [];
                angular.forEach(response.data.campaigns, function (campaign) {
                    if (campaign.recipients.segment_opts) {
                        console.log(campaign.recipients.segment_opts);
                        result.push(campaign);
                    }
                });
                return result;
            }
        }

        function memberCount() {
            return $http.get('/api/mailchimp/member_count')
                .success(memberCountSuccess);

            function memberCountSuccess(response) {
                return response.data;
            }
        }

        function interests() {
            $http.get('/api/mailchimp/lists/' + newsletter_id + '/categories')
                .then(function (response) {
                    console.log(response);
                });

            // /lists/{list_id}/interest-categories/{category_id}/interests
        }
    }
    MailChimp.$inject = ["$http", "$q"];
})();
/**
 * ROUTES: notosportal.info
 */
(function () {
    'use strict';

    angular
        .module('notosportal.info')
        .run(configRoutes);

    /* @ngInject */
    function configRoutes(routehelper) {
        routehelper.configureStates(getStates());
    }
    configRoutes.$inject = ["routehelper"];;

    function getStates() {
        return [
            {
                state: 'media',
                config: {
                    abstract: true,
                    url: '/media',
                    views: {
                        'main@': {
                            templateUrl: 'js/modules/layout/main.html'
                        }
                    },
                    title: 'in beeld'
                }
            },
            {
                state: 'media.photos',
                config: {
                    url: '/photos',
                    views: {
                        'content@media': {
                            templateUrl: 'js/modules/media/photos.html',
                            controller: 'PhotoController',
                            controllerAs: 'vm'
                        }
                    },
                    title: 'foto\'s'
                }
            },
            {
                state: 'media.videos',
                config: {
                    url: '/videos',
                    views: {
                        'content@media': {
                            templateUrl: 'js/modules/media/videos.html',
                            controller: 'VideoController',
                            controllerAs: 'vm'
                        }
                    },
                    title: 'video\'s'
                }
            }
        ];
    };
})();
/**
 * notosportal.media
 * CONTROLLER: PhotoController
 */
(function () {
    'use strict';

    angular
        .module('notosportal.media')
        .controller('PhotoController', PhotoController);

    /* @ngInject */
    function PhotoController(GPCollections) {
        /*jshint validthis: true */
        var vm = this;
        vm.collections = [];


        activate();

        /////////////

        function activate() {
            vm.collections = GPCollections.get();
        }
    }
    PhotoController.$inject = ["GPCollections"];
})();
/**
 * notosportal.media
 * CONTROLLER: VideoController
 */
(function () {
    'use strict';

    angular
        .module('notosportal.media')
        .controller('VideoController', VideoController);

    /* @ngInject */
    function VideoController(Video) {
        /*jshint validthis: true */
        var vm = this;

        vm.videos = [];
        vm.src = src;

        activate();
        //////////////

        function activate() {
            Video.getList().then(videosComplete);

            function videosComplete(data) {
                vm.videos = data;
            }
        }
        function src(video) {
            return 'https://www.youtube.com/embed/' + video.id + '?showinfo=0&amp;wmode=opaque';
        }
    }
    VideoController.$inject = ["Video"];
})();
/**
 * notosportal.media
 * FACTORY: Video
 */

(function () {
    'use strict';

    angular
        .module('notosportal.media')
        .factory('Video', Video);

    /* @ngInject */
    function Video($q) {
        var videos = [
            {id: 'Upwfo3-7qbE', title: 'Chinouck en Noor presenteren onze school'},
            {id: 'hXPjArV6_rA', title: 'Saved by the bell 2015'},
            {id: '_k8Zw9rYmB4', title: 'Onze zorgvisie'},
            {id: 'OEqAylOlIho', title: 'De Klimtoren Wave'},
            {id: 'JaGQQOCFq5s', title: 'Ice Bucket Challenge mevr. Rebekka'}
        ];


        var service = {
            getList: getList
        }

        return service;
        ////////////////

        function getList() {
            var deferred = $q.defer();

            deferred.resolve(videos);

            return deferred.promise;
        }

    }
    Video.$inject = ["$q"];
})();
/**
 * ROUTES: notosportal.parents
 */
(function () {
    'use strict';

    angular
        .module('notosportal.parents')
        .run(configRoutes);

    /* @ngInject */
    function configRoutes(routehelper) {
        routehelper.configureStates(getStates());
    }
    configRoutes.$inject = ["routehelper"];;

    function getStates() {
        return [
            {
                state: 'parents',
                config: {
                    abstract: true,
                    url: '/parents',
                    views: {
                        'main@': {
                            templateUrl: 'js/modules/layout/main.html'
                        }
                    },
                }
            },
            {
                state: 'parents.pta',
                config: {
                    url: '/pta',
                    views: {
                        'content@parents': {
                            templateUrl: 'js/modules/parents/pta.html'
                        }
                    },
                    title: 'Ouderraad'
                }
            },
            {
                state: 'parents.read',
                config: {
                    url: '/read',
                    views: {
                        'content@parents': {
                            templateUrl: 'js/modules/parents/read.html'
                        }
                    },
                    title: 'Lees (groot)ouders'
                }
            },
            {
                state: 'parents.volunteers',
                config: {
                    url: '/volunteers',
                    views: {
                        'content@parents': {
                            templateUrl: 'js/modules/parents/volunteers.html'
                        }
                    },
                    title: 'Vrijwilligers'
                }
            }
        ];
    };
})();
/**
 * ROUTES: notosportal.spotlight
 */
(function () {
    'use strict';

    angular
        .module('notosportal.spotlight')
        .run(configRoutes);

    /* @ngInject */
    function configRoutes(routehelper) {
        routehelper.configureStates(getStates());
    }
    configRoutes.$inject = ["routehelper"];;

    function getStates() {
        return [
            {
                state: 'spotlight',
                config: {
                    abstract: true,
                    url: '/spotlight',
                    views: {
                        'main@': {
                            templateUrl: 'js/modules/layout/main.html'
                        }
                    },
                }
            },
            {
                state: 'spotlight.pimp',
                config: {
                    url: '/pimp',
                    views: {
                        'content@spotlight': {
                            templateUrl: 'js/modules/spotlight/pimp.html'
                        }
                    },
                    title: 'Pimp je school'
                }
            },
            {
                state: 'spotlight.kiva',
                config: {
                    url: '/kiva',
                    views: {
                        'content@spotlight': {
                            templateUrl: 'js/modules/spotlight/kiva.html'
                        }
                    },
                    title: 'KiVa'
                }
            },
            {
                state: 'spotlight.diff',
                config: {
                    url: '/diff',
                    views: {
                        'content@spotlight': {
                            templateUrl: 'js/modules/spotlight/diff.html'
                        }
                    },
                    title: 'Contractwerk in de kleuterschool'
                }
            },
            {
                state: 'spotlight.lang',
                config: {
                    url: '/lang',
                    views: {
                        'content@spotlight': {
                            templateUrl: 'js/modules/spotlight/lang.html'
                        }
                    },
                    title: 'Nieuwe taalmethode'
                }
            },
            {
                state: 'spotlight.media',
                config: {
                    url: '/media',
                    views: {
                        'content@spotlight': {
                            templateUrl: 'js/modules/spotlight/media.html'
                        }
                    },
                    title: 'Leerplan media'
                }
            },
            {
                state: 'spotlight.readout',
                config: {
                    url: '/readout',
                    views: {
                        'content@spotlight': {
                            templateUrl: 'js/modules/spotlight/readout.html'
                        }
                    },
                    title: 'Voorleesweek 2015'
                }
            }
        ];
    };
})();
/**
 * notosportal.widgets
 * DIRECTIVE: appearAnimation
 */
(function () {
    'use strict';

    angular
        .module('notosportal.widgets')
        .directive('appearAnimation', appearAnimation);

    /* @ngInject */
    function appearAnimation() {
        var directive = {
            restrict: 'A',
            link: linkFunc
        };

        return directive;
        //////////////////////

        function linkFunc(scope, element, attrs) {
            if (!angular.element('body').hasClass('no-csstransitions')) {
                $(element).bind('appear', appear);
            }
            function appear() {
                var delay = attrs.appearAnimationDelay || 1;
                if (delay > 1) {
                    $(element).css('animation-delay', delay + 'ms');
                }
                $(element).addClass('animated').addClass(attrs.appearAnimation);
            }
        }
    }
})();


/**
 * notosportal.widgets
 * DIRECTIVE: blur
 */
(function () {
    'use strict';

    angular
        .module('notosportal.widgets')
        .directive('blur', blur);

    /* @ngInject */
    function blur($timeout) {
        var directive = {
            restrict: 'A',
            link: linkFunc
        };

        return directive;
        //////////////////////

        function linkFunc(scope, element, attrs) {
            element.addClass('fwb-bg fwb-blur');

            $timeout(function () {

                var img = new Image(),
                    prependBox = '<div class="blur-box"/>';

                if (!element.find('canvas').length) {

                    if (attrs.image) {
                        img.src = attrs.image;
                    } else if (element.css('background-image') !== 'none') {

                        img.src = element.css('background-image')
                            .replace('url("', '').replace('")', '');
                        element.css('background-image', 'none');
                    }

                    img.onload = function () {
                        Pixastic.process(img, 'blurfast', {
                            amount: attrs.amount || 2
                        });
                    }

                    element
                        .prepend(prependBox)
                        .find('.blur-box')
                        .prepend(img);
                }

                $timeout(function () {
                    var canvas = element.find('canvas');

                    if (canvas.width() == element.width()) {
                        canvas.css({
                            marginLeft: 0,
                            marginTop: -((canvas.height() - element.height()) / 2)
                        });
                    } else {
                        canvas.css({
                            marginTop: 0,
                            marginLeft: -((canvas.width() - element.width()) / 2)
                        });
                    }

                    $('body').addClass('blur-load');
                }, 50);
            });
        }

    }
    blur.$inject = ["$timeout"];
})();


/**
 * notosportal.widgets
 * DIRECTIVE: fancybox
 */
(function () {
    'use strict';

    angular
        .module('notosportal.widgets')
        .directive('fancybox', fancybox);

    /* @ngInject */
    function fancybox() {
        var directive = {
            restrict: 'A',
            link: linkFunc
        };

        return directive;
        //////////////////////

        function linkFunc(scope, element, attrs) {
            element.find('.gallery-images, .lightbox').fancybox({
                nextEffect: 'fade',
                prevEffect: 'fade',
                openEffect: 'fade',
                closeEffect: 'fade',
                helpers: {
                    overlay: {
                        locked: false
                    },
                    title: {
                        type: 'over'
                    }
                },
                tpl: {
                    closeBtn: '<a title="Sluiten" class="fancybox-item fancybox-close" href="javascript:;">×</a>',
                    next: '<a title="Volgende" class="fancybox-nav fancybox-next" href="javascript:;">\n\
						<span><svg x="0" y="0" width="9px" height="16px" viewBox="0 0 9 16" enable-background="new 0 0 9 16" xml:space="preserve"><polygon fill-rule="evenodd" clip-rule="evenodd" fill="#fcfcfc" points="1,0.001 0,1.001 7,8 0,14.999 1,15.999 9,8 "/></svg></span>\n\
					</a>',
                    prev: '<a title="Vorige" class="fancybox-nav fancybox-prev" href="javascript:;">\n\
						<span><svg x="0" y="0" width="9px" height="16px" viewBox="0 0 9 16" enable-background="new 0 0 9 16" xml:space="preserve"><polygon fill-rule="evenodd" clip-rule="evenodd" fill="#fcfcfc" points="8,15.999 9,14.999 2,8 9,1.001 8,0.001 0,8 "/></svg></span>\n\
					</a>'
                }
            });
        }

    }
})();


/**
 * notosportal.widgets
 * DIRECTIVE: livicon
 */
(function () {
    'use strict';

    angular
        .module('notosportal.widgets')
        .directive('livicon', livicon);

    /* @ngInject */
    function livicon() {
        var directive = {
            restrict: 'A',
            replace: true,
            scope: false,
            link: linkFunc
        };

        return directive;
        //////////////////////

        function linkFunc(scope, element) {
            element.addClass('livicon');
            element.addLivicon();
        }

    }
})();


/**
 * notosportal.widgets
 * DIRECTIVE: paralax
 */
(function () {
    'use strict';

    angular
        .module('notosportal.widgets')
        .directive('paralax', paralax);

    /* @ngInject */
    function paralax($timeout, $window) {
        var directive = {
            restrict: 'A',
            link: linkFunc
        };

        return directive;
        //////////////////////

        function linkFunc(scope, element, attrs) {
            $timeout(function () {
                element.addClass('fwb-bg fwb-blur');
                var speed = attrs.speed || 3;

                function bgPosition() {
                    var $thisY = element.offset().top,
                        $windowY = $window.pageYOffset;

                    if ($thisY > $windowY)
                        element.css({backgroundPosition: '50% ' + (($thisY - $windowY) / speed) + 'px'});
                    else
                        element.css({backgroundPosition: '50% ' + (-($thisY - $windowY) / speed) + 'px'});
                }


                bgPosition();

                angular.element($window).bind('scroll', bgPosition);
            });
        }

    }
    paralax.$inject = ["$timeout", "$window"];
})();


/**
 * notosportal.widgets
 * DIRECTIVE: rsSlidr
 */
(function () {
    'use strict';

    angular
        .module('notosportal.widgets')
        .directive('rsSlider', rsSlider);

    /* @ngInject */
    function rsSlider($timeout) {
        var directive = {
            restrict: 'A',
            link: linkFunc
        };

        return directive;
        //////////////////////

        function linkFunc(scope, element, attrs) {
            $timeout(function () {
                //Revolution Slider Start
                var revolutionSlider = element;

                if (revolutionSlider.closest('.rs-slider').hasClass('full-width')) {
                    var body = angular.element('body'),
                        width = body.width(),
                        topHeight = 0,
                        headerHeight = 104,
                        height;

                    if (angular.element('#top-box').length) {
                        if (body.hasClass('hidden-top'))
                            topHeight = angular.element('#top-box').outerHeight() - 32;
                    }

                    if ((body.width()) >= 1200)
                        height = body.height() - (topHeight + headerHeight);
                    else
                        height = 800;

                    revolutionSlider.revolution({
                        delay: 6000,
                        startwidth: 1200,
                        startheight: height,
                        hideThumbs: 10,
                        navigationType: 'bullet',
                        navigationArrows: 'solo',
                        navigationHAlign: 'center',
                        navigationVAlign: 'top',
                        navigationHOffset: -545,
                        navigationVOffset: 30,
                        hideTimerBar: 'on'
                    }).parent().parent().removeClass('load');
                } else {
                    revolutionSlider.revolution({
                        delay: 6000,
                        startwidth: 1200,
                        startheight: 500,
                        hideThumbs: 10,
                        navigationType: 'none',
                        onHoverStop: 'off'
                    }).parent().parent().removeClass('load');
                }
            });
            //Revolution Slider End
        }
    }
    rsSlider.$inject = ["$timeout"];
})();


/**
 * notosplus.router
 * FACTORY: routehelper
 */

(function () {
    'use strict';

    angular
        .module('blocks.router')
        .provider('routehelperConfig', routehelperConfig)
        .factory('routehelper', routehelper);

    routehelper.$inject = ['routehelperConfig', '$rootScope', '$state'];

    function routehelperConfig() {
        /* jshint validthis:true */
        this.config = {};

        this.$get = function () {
            return {
                config: this.config
            };
        };
    }

    function routehelper(routehelperConfig, $rootScope, $state) {
        var $urlRouterProvider = routehelperConfig.config.$urlRouterProvider;
        var $stateProvider = routehelperConfig.config.$stateProvider;

        var service = {
            configureStates: configureStates,
            states: states,
            get: get
        };

        init();

        return service;
        //////////////////

        function configureStates(states) {
            states.forEach(function (state) {
                if (state.config.title) {
                    state.config.ncyBreadcrumb = {
                        label: state.config.title.toLowerCase()
                    }
                }

                $stateProvider.state(state.state, state.config);
            });
        }

        function states() {
            return $state.get();
        }

        function get(pattern) {
            var result = null;
            states().forEach(function (state) {
                if (state.name === pattern) {
                    result = state;
                }
            });
            return result;
        }

        function init() {
            updateDocTitle();
            $urlRouterProvider.otherwise('/index/dashboard');
        }

        function updateDocTitle() {
            $rootScope.$on('$stateChangeSuccess',
                function (event, current, previous) {
                    var title = routehelperConfig.config.title + (current.title ? ' | ' + current.title : '');
                    $rootScope.title = title; // data bind to <title>
                    $rootScope.$state = current;
                }
            );
        }

    }
})();
/**
 * blocks.logger
 * FACTORY: logger
 */

(function () {
    'use strict';

    angular
        .module('blocks.logger')
        .factory('logger', logger);

    logger.$inject = ['$log', 'toastr'];

    function logger($log, toastr) {
        var service = {
            showToasts: true,

            error: error,
            info: info,
            success: success,
            warning: warning,

            removed: removed,
            saved: saved,

            // straight to console; bypass toastr
            log: $log.log
        };

        return service;
        /////////////////////

        function error(message, data, title) {
            toastr.error(message, title);
            $log.error('Fout: ' + message, data);
        }

        function info(message, data, title) {
            toastr.info(message, title);
            $log.info('Info: ' + message, data);
        }

        function success(message, data, title) {
            toastr.success(message, title);
            $log.info('Succes: ' + message, data);
        }

        function warning(message, data, title) {
            toastr.warning(message, title);
            $log.warn('Let op: ' + message, data);
        }

        function removed(message, data, title) {
            toastr.warning(message, title);
            $log.warn('Verwijderd: ' + message, data);
        }

        function saved(message, data, title) {
            toastr.success(message, title);
            $log.info('Bewaard: ' + message, data);
        }
    }
})();
// Include in index.html so that app level exceptions are handled.
// Exclude from testRunner.html which should run exactly what it wants to run
(function() {
    'use strict';

    angular
        .module('blocks.exception')
        .provider('exceptionHandler', exceptionHandlerProvider)
        .config(config);

    /**
     * Must configure the exception handling
     * @return {[type]}
     */
    function exceptionHandlerProvider() {
        /* jshint validthis:true */
        this.config = {
            appErrorPrefix: undefined
        };

        this.configure = function (appErrorPrefix) {
            this.config.appErrorPrefix = appErrorPrefix;
        };

        this.$get = function() {
            return {config: this.config};
        };
    }

    /**
     * Configure by setting an optional string value for appErrorPrefix.
     * Accessible via config.appErrorPrefix (via config value).
     * @param  {[type]} $provide
     * @return {[type]}
     * @ngInject
     */
    function config($provide) {
        $provide.decorator('$exceptionHandler', extendExceptionHandler);
    }
    config.$inject = ["$provide"];

    /**
     * Extend the $exceptionHandler service to also display a toast.
     * @param  {Object} $delegate
     * @param  {Object} exceptionHandler
     * @param  {Object} logger
     * @return {Function} the decorated $exceptionHandler service
     */
    function extendExceptionHandler($delegate, exceptionHandler, logger) {
        return function(exception, cause) {
            var appErrorPrefix = exceptionHandler.config.appErrorPrefix || '';
            var errorData = {exception: exception, cause: cause};
            exception.message = appErrorPrefix + exception.message;
            $delegate(exception, cause);
            /**
             * Could add the error to a service's collection,
             * add errors to $rootScope, log errors to remote web server,
             * or log locally. Or throw hard. It is entirely up to you.
             * throw exception;
             *
             * @example
             *     throw { message: 'error message we added' };
             */
            logger.error(exception.message, errorData);
        };
    }
    extendExceptionHandler.$inject = ["$delegate", "exceptionHandler", "logger"];
})();
/**
 * blocks.exception
 * FACTORY: exception
 */

(function () {
    'use strict';

    angular
        .module('blocks.exception')
        .factory('exception', exception);

    /* @ngInject */
    function exception(logger) {
        var service = {
            catcher: catcher
        };
        return service;

        function catcher(message) {
            return function(reason) {
                logger.error(message, reason);
            };
        }
    }
    exception.$inject = ["logger"];
})();
/**
 * notosportal - karlvaniseghem
 * Copyright © 2015
 */
/**
 FOR NOW
 */
var $ = jQuery,
    isTouchDevice = navigator.userAgent.match(/(iPhone|iPod|iPad|Android|BlackBerry|Windows Phone)/);

//Calculating The Browser Scrollbar Width
var parent, child, scrollWidth, bodyWidth;

if (scrollWidth === undefined) {
    parent = $('<div style="width: 50px; height: 50px; overflow: auto"><div/></div>').appendTo('body');
    child = parent.children();
    scrollWidth = child.innerWidth() - child.height(99).innerWidth();
    parent.remove();
}
//TODO: replace this jquery thing with angular styled menu thing
$(document).ready(function () {
    //Replace img > IE8
    if (/MSIE (\d+\.\d+);/.test(navigator.userAgent)) {
        var ieversion = new Number(RegExp.$1);

        if (ieversion < 9) {
            $('img[src*="svg"]').attr('src', function () {
                return $(this).attr('src').replace('.svg', '.png');
            });
        }
    }

    //IE
    if (/MSIE (\d+\.\d+);/.test(navigator.userAgent))
        $('html').addClass('ie');

    //Touch device
    if (isTouchDevice)
        $('body').addClass('touch-device');

    menu();


});

//Header Menu
function menu() {
    var body = $('body'),
        primary = '.primary';

    $(primary).find('.parent > a .open-sub, .megamenu .title .open-sub').remove();

    if ((body.width() + scrollWidth) < 992 || $('.header').hasClass('minimized-menu'))
        $(primary).find('.parent > a, .megamenu .title').append('<span class="open-sub"><span></span><span></span></span>');
    else
        $(primary).find('ul').removeAttr('style').find('li').removeClass('active');

    $(primary).find('.open-sub').click(function (e) {
        e.preventDefault();

        var item = $(this).closest('li, .box');

        if ($(item).hasClass('active')) {
            $(item).children().last().slideUp(600);
            $(item).removeClass('active');
        } else {
            var li = $(this).closest('li, .box').parent('ul, .sub-list').children('li, .box');

            if ($(li).is('.active')) {
                $(li).removeClass('active').children('ul').slideUp(600);
            }

            $(item).children().last().slideDown(600);
            $(item).addClass('active');

            if (body.width() + scrollWidth > 991) {
                var maxHeight = body.height() - ($(primary).find('.navbar-nav')).offset().top - 20;

                $(primary).find('.navbar-nav').css({
                    maxHeight: maxHeight,
                    overflow: 'auto'
                });
            }
        }
    });


    $(primary).find('.parent > a').click(function (e) {
        if (((body.width() + scrollWidth) > 991) && (isTouchDevice)) {
            var $this = $(this);

            if ($this.parent().hasClass('open')) {
                $this.parent().removeClass('open')
            } else {
                e.preventDefault();

                $this.parent().addClass('open')
            }
        }
    });

    body.on('click', function (e) {
        if (!$(e.target).is(primary + ' *')) {
            if ($(primary + ' .collapse').hasClass('in')) {
                $(primary + ' .navbar-toggle').addClass('collapsed');
                $(primary + ' .navbar-collapse').collapse('hide');
            }
        }
    });


    /* Top Menu */
    var topMenu = $('.top-navbar').find('.collapse');

    if ((body.width() + scrollWidth) < 992)
        topMenu.css('width', body.find('#top-box .container').width());
    else
        topMenu.css('width', 'auto');
}

//Banner set Start
function bannerSetCarousel() {
    $('.banner-set .banners').each(function () {
        var $this = $(this),
            bannerSet = $this.closest('.banner-set'),
            prev = bannerSet.find('.prev'),
            next = bannerSet.find('.next'),
            autoPlay = true,
            timeoutDuration = 2000,
            scrollDuration = 1000,
            height;

        /* Animation Duration */
        if (bannerSet.data('animationDuration'))
            scrollDuration = bannerSet.data('animationDuration');

        /* Autoplay */
        if (bannerSet.data('autoplayDisable'))
            autoPlay = false;
        else
        /* Autoplay Speed */
        if (bannerSet.data('autoplaySpeed'))
            timeoutDuration = bannerSet.data('autoplaySpeed');

        $this.carouFredSel({
            auto: {
                play: autoPlay,
                timeoutDuration: timeoutDuration
            },
            width: '100%',
            responsive: false,
            infinite: false,
            next: next,
            prev: prev,
            pagination: bannerSet.find('.pagination'),
            scroll: {
                duration: scrollDuration,
                items: 1
            },
            onCreate: function () {
                height = $this.height();

                $this.find('.banner').css('height', height);
                if (bannerSet.hasClass('banner-set-mini') && bannerSet.hasClass('banner-set-no-pagination')) {
                    bannerSet.find('.prev, .next').css('margin-top', -((height / 2) + 7));
                }
            }
        })
            .touchwipe({
                wipeLeft: function () {
                    $this.trigger('next', 1);
                },
                wipeRight: function () {
                    $this.trigger('prev', 1);
                },
                preventDefaultEvents: false
            })
            .parents('.banner-set').removeClass('load');
    });
}
//Banner set End


(function () {
    var delay = (function () {
        var timer = 0;
        return function (callback, ms) {
            clearTimeout(timer);
            timer = setTimeout(callback, ms);
        };
    })();

    function resizeFunctions() {
        if ($('.banner-set').length && typeof bannerSetCarousel == 'function') bannerSetCarousel();
    }

    if (isTouchDevice) {
        $(window).bind('orientationchange', function () {
            delay(function () {
                resizeFunctions();
            }, 200);
        });
    } else {
        $(window).on('resize', function () {
            delay(function () {
                resizeFunctions();
            }, 500);
        });
    }
}());